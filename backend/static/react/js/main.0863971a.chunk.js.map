{"version":3,"sources":["constants/APIEndpoints.js","components/animated/FadeInContainer.js","components/ClassificationResult.js","components/Classifiers.js","components/FaceSwap.js","components/Footer.js","logo.svg","components/Header.js","components/HumanPoseEstimation.js","components/IFOSR.js","components/IndianFaceRecognizer.js","components/LFWPlusRecognizer.js","media/index.js","components/Loader.js","components/GlobalStyles.js","components/Home.js","components/RedCarGAN.js","components/RedCarVAE.js","components/TextClassifier.js","onnx/Utils.js","components/mnist_vae_encoder_32x32.onnx","components/MnistVae.js","components/mnist_vae_decoder_32x32_onnxjs.onnx","components/StyleTransfer.js","components/ImageCaptioning.js","components/SpeechToText.js","components/helpers/ScrollToTop.js","components/Layout.js","components/Translator.js","App.js","serviceWorker.js","index.js"],"names":["CLASSIFY_ENDPOINT","FACE_ALIGN_ENDPOINT","GENERATORS_ENDPOINT","FadeInContainer","children","Container","className","ClassificationResult","results","Table","size","striped","bordered","responsive","map","e","idx","class_idx","class_name","confidence","toFixed","axios","defaults","headers","post","Classifiers","useState","file","setFile","modelType","setModelType","fileName","setFileName","showMessage","setShowMessage","message","setMessage","showLoading","setShowLoading","uploadPercentage","setUploadPercentage","setResults","classifyImage","a","formData","FormData","append","crossDomain","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","data","JSON","stringify","setTimeout","Form","Row","Col","Group","as","controlId","Label","Control","onChange","target","value","File","custom","Input","files","length","name","accept","data-browse","md","lg","Image","src","URL","createObjectURL","style","width","rounded","fluid","Button","variant","onClick","disabled","undefined","ProgressBar","now","label","hidden","block","Spinner","animation","role","aria-hidden","Toast","onClose","show","Header","Body","FaceSwap","faceOne","setFaceOne","faceTwo","setFaceTwo","swappedImage","setSwappedImage","swapFaces","sm","Footer","Navbar","Text","href","rel","taget","TitleWrapper","styled","Link","LogoImage","title","bg","sticky","expand","to","logo","HumanPoseEstimation","humanImage","setHumanImage","poseDetectedImage","setPoseDetectedImage","detectPose","console","log","SRResult","download","IFOSR","selectedFile","setSelectedFile","superResoluteImage","reponse","response","Alert","Heading","IndianFaceRecognizer","alignedFace","setAlignedFace","dataURLtoBlob","dataurl","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","type","aligned_face","alignedFormData","alignedFaceFile","LFWPlusRecognizer","defaultBreakpoints","huge","large","medium","small","getSizeFromBreakpoint","breakpointValue","breakpoints","error","generateMedia","lessThan","breakpoint","css","greaterThan","between","firstBreakpoint","secondBreakpoint","oldStyle","Object","keys","reduce","acc","warn","from","assign","StyledLoaderContainer","div","StyledLoader","media","Loader","props","useEffect","start","document","getElementById","classList","add","erase","remove","end","onFinishLoad","clearTimeout","xmlns","id","viewBox","height","data-name","class","d","x","y","rx","GlobalStyles","createGlobalStyle","theme","fontFamily","Home","xl","xs","body","btntext","url","card","data-uk-scrollspy","Card","minWidth","Title","componentToHex","c","hex","toString","rgbToHex","r","g","b","getBgAndTextColor","f","in_min","out_min","bg_scaled","floor","text_scaled","RedCarGAN","Array","random","latentz","setLatentz","result","setResult","currIdx","setCurrIdx","onGeneratorClicked","generatedCar","newLatentZ","abs","min","max","step","event","parseFloat","val","ButtonGroup","toggle","ToggleButton","backgroundColor","color","VAEResult","recon_image","latent_z","encodeURIComponent","RedCarVAE","autoEncodeImage","TextClassificationResult","label_idx","label_name","TextClassifier","inputText","setInputText","loading","setLoading","InputGroup","Prepend","aria-label","placeholder","warmupModel","model","dims","warmupTensor","Tensor","Float32Array","i","run","imageDataRgbaToNdarray","imageData","ndarray","NdarrayAlphaToMono","imageArray","shape","ops","pick","ndArrayToTensor","N","C","H","W","tensor","set","setCanvasFromMonoTensor","canvas","t_data","t_index","ctx","getContext","contextImageData","createImageData","contextData","index","putImageData","drawImage","resampleCanvasImage","width_source","height_source","ratio_w","ratio_h","ratio_w_half","ceil","ratio_h_half","img","getImageData","img2","data2","j","x2","weight","weights","weights_alpha","gx_r","gx_g","gx_b","gx_a","center_y","yy_start","yy_stop","yy","dy","center_x","w0","xx_start","xx_stop","xx","dx","w","sqrt","pos_x","encoderInferenceSession","decoderInferenceSession","MnistVae","isReady","setIsReady","canvasRef","useRef","dstCanvasRef","dstContext","setDstContext","context","setContext","loadModel","InferenceSession","encoderModel","decoderModel","current","renderCtx","updateCanvas","zTensor","get","mouseDown","canvasOffsetLeft","getBoundingClientRect","left","canvasOffsetTop","top","handleMouseDown","evt","clientX","clientY","reconstructDrawing","scaledImage","monoImage","divseq","output","handleMouseUp","handleMouseMove","beginPath","moveTo","lineTo","lineCap","strokeStyle","lineWidth","stroke","closePath","handleTouchStart","preventDefault","touch","touches","mouseEvent","MouseEvent","dispatchEvent","handleTouchEnd","handleTouchMove","addEventListener","clientWidth","removeEventListener","display","ref","border","data-paper-resize","clearRect","StyleResult","styleName","StyleTransfer","styleType","setStyleType","stylizeImage","ImageCaptioning","captionImage","maxWidth","maxHeight","sample_audios","RecordButtonStyle","isRecording","RecordButton","status","startRecording","stopRecording","resetWatch","setIsRecording","activeElement","blur","SpeechToText","useReactMediaRecorder","video","audio","blobPropertyBag","mediaBlobUrl","elapsedTime","setElapsedTime","selectedSample","setSelectedSample","recordedAudio","setRecordedAudio","setAudioFileFromSample","filename","fetch","process","res","blob","blobUrl","speechToText","then","audioBlob","audiofile","uuidv4","interval","setInterval","clearInterval","controls","autoplay","ScrollToTop","prevProps","this","location","pathname","window","scrollTo","React","Component","withRouter","StyledContent","Layout","isLoading","setIsLoading","Translator","translateText","source_ln","target_ln","App","showAlert","setShowAlert","dismissible","exact","path","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"js/main.0863971a.chunk.js","sourcesContent":["export const CLASSIFY_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/classify`;\r\nexport const FACE_ALIGN_ENDPOINT = `https://foqlzc9qgh.execute-api.ap-south-1.amazonaws.com/dev/face-align`;\r\nexport const FACE_SWAP_ENDPOINT = `https://foqlzc9qgh.execute-api.ap-south-1.amazonaws.com/dev/face-swap`;\r\nexport const HUMAN_POSE_ESTIMATION_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/human-pose`;\r\nexport const GENERATORS_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/generators`;\r\nexport const AUTOENCODERS_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/autoencoders`;\r\nexport const TEXT_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/text`;\r\nexport const STYLE_TRANSFER_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/style-transfer`;\r\nexport const TRANSLATOR_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/text/translate`;\r\nexport const IMAGE_CAPTION_ENDPOINT = `https://thetensorclan-backend.herokuapp.com/image-captioning`;\r\nexport const SPEECH_TO_TEXT = `https://thetensorclan-backend.herokuapp.com/speech-to-text`;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst FadeInContainer = ({ children }) => {\r\n    return <Container className=\"uk-animation-fade\">{children}</Container>;\r\n};\r\n\r\nexport default FadeInContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n// import styled from \"styled-components\";\r\n\r\n// const SmallTable = styled(Table)`\r\n//     * {\r\n//         font-size: 0.8rem;\r\n//     }\r\n// `;\r\n\r\nconst ClassificationResult = ({ results }) => {\r\n    return (\r\n        <FadeInContainer>\r\n            <Table size=\"lg\" striped bordered responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>class_idx</th>\r\n                        <th>class_name</th>\r\n                        <th>confidence</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {results.map((e, idx) => (\r\n                        <tr key={idx}>\r\n                            <td>{e.class_idx}</td>\r\n                            <td>{e.class_name}</td>\r\n                            <td>{e.confidence.toFixed(4)}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nClassificationResult.propTypes = {\r\n    results: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ClassificationResult;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Spinner,\r\n    Toast,\r\n    ProgressBar,\r\n    Image,\r\n} from \"react-bootstrap\";\r\nimport { CLASSIFY_ENDPOINT } from \"../constants/APIEndpoints\";\r\nimport axios from \"axios\";\r\nimport ClassificationResult from \"./ClassificationResult\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst Classifiers = () => {\r\n    const [file, setFile] = useState(\"\");\r\n    const [modelType, setModelType] = useState(\"resnet34-imagenet\");\r\n    const [fileName, setFileName] = useState(\"Please select an image\");\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n    const [results, setResults] = useState([]);\r\n\r\n    const classifyImage = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setShowMessage(false);\r\n            setShowLoading(true);\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file);\r\n\r\n            // request classification from end-point\r\n            const results = await axios.post(\r\n                `${CLASSIFY_ENDPOINT}/${modelType}`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n            // console.log(JSON.stringify(results.data));\r\n            setResults(results.data);\r\n        } catch (e) {\r\n            // some error occured, create a Toast !\r\n            setMessage(JSON.stringify(e));\r\n            setShowMessage(true);\r\n            setResults([]);\r\n        }\r\n\r\n        // we are done, now turn off the loading and progress bar\r\n        setShowLoading(false);\r\n\r\n        // reset the states\r\n        setTimeout(() => {\r\n            setUploadPercentage(0);\r\n        }, 5000);\r\n    };\r\n\r\n    const onFileSelect = (e) => {\r\n        if (e.target.files.length >= 1) {\r\n            setFile(e.target.files[0]);\r\n            setFileName(e.target.files[0].name);\r\n        } else {\r\n            setFileName(\"Please select an Image\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group\r\n                            as={Row}\r\n                            controlId=\"exampleForm.ControlSelect1\"\r\n                            className=\"py-5\"\r\n                        >\r\n                            <Form.Label>\r\n                                <h5>\r\n                                    <strong>Select Model</strong>\r\n                                </h5>\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={(e) => setModelType(e.target.value)}\r\n                                value={modelType}\r\n                            >\r\n                                <option value=\"resnet34-imagenet\">\r\n                                    ImageNet Classifier - ResNet\r\n                                </option>\r\n                                <option value=\"mobilenetv2-ifo\">\r\n                                    IFO (Identified Flying Object) Classifier -\r\n                                    MobileNetV2\r\n                                </option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label>\r\n                                <h5>\r\n                                    <strong>Select Image</strong>\r\n                                </h5>\r\n                            </Form.Label>\r\n\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={onFileSelect}\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {fileName}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto\">\r\n                        {file.name && (\r\n                            <Image\r\n                                src={URL.createObjectURL(file)}\r\n                                style={{ width: \"85%\" }}\r\n                                className=\"mx-auto mt-5\"\r\n                                rounded\r\n                                fluid\r\n                            />\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5 mx-auto shadow-lg\"\r\n                        size=\"lg\"\r\n                        onClick={() => classifyImage()}\r\n                        disabled={file.name === undefined}\r\n                    >\r\n                        Classify !\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto mt-5\">\r\n                        {results.length > 0 && (\r\n                            <ClassificationResult results={results} />\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* Show the Upload Progress */}\r\n                        <ProgressBar\r\n                            className=\"mt-5\"\r\n                            striped\r\n                            variant=\"dark\"\r\n                            now={uploadPercentage}\r\n                            label={`${uploadPercentage}%`}\r\n                            hidden={!showLoading}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                        hidden={!showLoading}\r\n                        disabled\r\n                        block\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />{\" \"}\r\n                        Loading...\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Toast\r\n                        onClose={() => setShowMessage(false)}\r\n                        show={showMessage}\r\n                        className=\"mx-auto mt-5 bg-dark text-white shadow-lg\"\r\n                        as={Row}\r\n                    >\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>just now</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </Row>\r\n            </Form>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default Classifiers;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Image,\r\n    Button,\r\n    ProgressBar,\r\n    Spinner,\r\n    Toast,\r\n} from \"react-bootstrap\";\r\nimport { FACE_SWAP_ENDPOINT } from \"../constants/APIEndpoints\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst FaceSwap = () => {\r\n    const [faceOne, setFaceOne] = useState({});\r\n    const [faceTwo, setFaceTwo] = useState({});\r\n    const [swappedImage, setSwappedImage] = useState(\"\");\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n    const swapFaces = async () => {\r\n        const formData = new FormData();\r\n        formData.append(\"files\", faceOne);\r\n        formData.append(\"files\", faceTwo);\r\n\r\n        try {\r\n            // clear out the messages\r\n            setShowMessage(false);\r\n            setMessage(\"\");\r\n            // show the progress bar\r\n            setShowLoading(true);\r\n            const results = await axios.post(\r\n                `${FACE_SWAP_ENDPOINT}`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n            setSwappedImage(results.data);\r\n        } catch (e) {\r\n            // some error occured, reset states and show message\r\n            setMessage(JSON.stringify(e));\r\n            setShowMessage(true);\r\n            setSwappedImage(\"\");\r\n        }\r\n\r\n        // we are done, now turn off the loading and progress bar\r\n        setShowLoading(false);\r\n\r\n        setTimeout(() => {\r\n            setUploadPercentage(0);\r\n        }, 5000);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Form>\r\n                <Row className=\"justify-content-around\">\r\n                    <Col sm={12} md={8} lg={5} className=\"m-1\">\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label>\r\n                                <h5>\r\n                                    <strong>Select Face 01</strong>\r\n                                </h5>\r\n                            </Form.Label>\r\n\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={(e) =>\r\n                                        setFaceOne(e.target.files[0])\r\n                                    }\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {faceOne.name === undefined\r\n                                        ? \"Select Face One\"\r\n                                        : faceOne.name}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                            {faceOne.name && (\r\n                                <Image\r\n                                    src={URL.createObjectURL(faceOne)}\r\n                                    style={{ width: \"85%\" }}\r\n                                    className=\"mx-auto mt-5\"\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            )}\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={12} md={8} lg={5} className=\"m-1\">\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label>\r\n                                <h5>\r\n                                    <strong>Select Face 02</strong>\r\n                                </h5>\r\n                            </Form.Label>\r\n\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={(e) =>\r\n                                        setFaceTwo(e.target.files[0])\r\n                                    }\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {faceTwo.name === undefined\r\n                                        ? \"Select Face Two\"\r\n                                        : faceTwo.name}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                            {faceTwo.name && (\r\n                                <Image\r\n                                    src={URL.createObjectURL(faceTwo)}\r\n                                    style={{ width: \"85%\" }}\r\n                                    className=\"mx-auto mt-5\"\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            )}\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5 mx-auto shadow-lg\"\r\n                        size=\"lg\"\r\n                        disabled={\r\n                            faceOne.name === undefined ||\r\n                            faceTwo.name === undefined\r\n                        }\r\n                        onClick={() => swapFaces()}\r\n                    >\r\n                        Swap Faces !\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* Show the Upload Progress */}\r\n                        <ProgressBar\r\n                            className=\"mt-5\"\r\n                            striped\r\n                            variant=\"dark\"\r\n                            now={uploadPercentage}\r\n                            label={`${uploadPercentage}%`}\r\n                            hidden={!showLoading}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                        hidden={!showLoading}\r\n                        disabled\r\n                        block\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />{\" \"}\r\n                        Loading...\r\n                    </Button>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto mt-5\">\r\n                        {swappedImage !== \"\" && (\r\n                            <Fragment>\r\n                                <h1 className=\"text-center\">Swapped Image</h1>\r\n                                <Image\r\n                                    src={swappedImage}\r\n                                    style={{ width: \"85%\" }}\r\n                                    className=\"mx-auto mt-5\"\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            </Fragment>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Toast\r\n                        onClose={() => setShowMessage(false)}\r\n                        show={showMessage}\r\n                        className=\"mx-auto mt-5 bg-dark text-white shadow-lg\"\r\n                        as={Row}\r\n                    >\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>just now</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </Row>\r\n            </Form>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default FaceSwap;\r\n","import React from \"react\";\r\nimport { Navbar, Container, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <hr />\r\n            <Navbar>\r\n                <Navbar.Text className=\"m-auto\">\r\n                    <Col className=\"text-center\">\r\n                        <a\r\n                            href=\"https://github.com/satyajitghana/TSAI-DeepVision-EVA4.0-Phase-2\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-github\" /> TSAI-EVA4.0-Phase2{\" \"}\r\n                        </a>\r\n                        <a\r\n                            href=\"https://github.com/extensive-vision-ai/thetensorclan-web\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-github\" /> thetensorclan-web{\" \"}\r\n                        </a>\r\n                        <a\r\n                            href=\"https://github.com/extensive-vision-ai/thetensorclan-backend-heroku\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-github\" />{\" \"}\r\n                            thetensorclan-backend\r\n                        </a>\r\n                    </Col>\r\n                    <Col className=\"mt-2 text-center\">\r\n                        <a\r\n                            href=\"https://www.linkedin.com/in/satyajitghana\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-linkedin\" /> satyajitghana{\" \"}\r\n                        </a>\r\n                        <a\r\n                            href=\"https://github.com/satyajitghana\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-github\" /> satyajitghana{\" \"}\r\n                        </a>\r\n                        <a\r\n                            href=\"http://instagram.com/shadowleaf.satyajit\"\r\n                            taget=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-instagram\" />{\" \"}\r\n                            shadowleaf.satyajit\r\n                        </a>\r\n                    </Col>\r\n                    <Col className=\"mt-2 text-center \">\r\n                        Made with <i className=\"fas fa-heart\" /> and{\" \"}\r\n                        <i className=\"fas fa-mug-hot\" /> by TheTensorClan\r\n                    </Col>\r\n                </Navbar.Text>\r\n            </Navbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"media/logo.61f43610.svg\";","import React from \"react\";\r\nimport { Navbar, Container, Image } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../logo.svg\";\r\n\r\nconst TitleWrapper = styled(Link)`\r\n    width: 80%;\r\n    /* Medium devices (tablets, 768px and up) */\r\n    @media (min-width: 768px) and (max-width: 991.98px) {\r\n        width: 80%;\r\n    }\r\n\r\n    /* Small devices (landscape phones, 576px and up)*/\r\n    @media (min-width: 576px) and (max-width: 767.98px) {\r\n        width: 120%;\r\n    }\r\n\r\n    /* Extra small devices (portrait phones, less than 576px) */\r\n    @media (max-width: 575.98px) {\r\n        width: 120%;\r\n    }\r\n`;\r\n\r\nconst LogoImage = styled(Image)`\r\n    width: 80%;\r\n    /* Medium devices (tablets, 768px and up) */\r\n    @media (min-width: 768px) and (max-width: 991.98px) {\r\n        width: 80%;\r\n    }\r\n\r\n    /* Small devices (landscape phones, 576px and up)*/\r\n    @media (min-width: 576px) and (max-width: 767.98px) {\r\n        width: 120%;\r\n    }\r\n\r\n    /* Extra small devices (portrait phones, less than 576px) */\r\n    @media (max-width: 575.98px) {\r\n        width: 120%;\r\n    }\r\n`;\r\n\r\nconst Header = ({ title }) => {\r\n    return (\r\n        <Container>\r\n            <Navbar\r\n                variant=\"light\"\r\n                bg=\"none\"\r\n                sticky=\"top\"\r\n                className=\"px-2\"\r\n                expand=\"lg\"\r\n            >\r\n                <TitleWrapper to=\"/\" className=\"mx-auto\">\r\n                    <LogoImage src={logo} className=\"mx-auto\" />\r\n                </TitleWrapper>\r\n            </Navbar>\r\n            <hr />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Image,\r\n    Button,\r\n    ProgressBar,\r\n    Spinner,\r\n    Toast,\r\n} from \"react-bootstrap\";\r\nimport { HUMAN_POSE_ESTIMATION_ENDPOINT } from \"../constants/APIEndpoints\";\r\nimport axios from \"axios\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst HumanPoseEstimation = () => {\r\n    const [humanImage, setHumanImage] = useState({});\r\n    const [poseDetectedImage, setPoseDetectedImage] = useState(\"\");\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n    const detectPose = async () => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", humanImage);\r\n\r\n        try {\r\n            // clear out the messages\r\n            setShowMessage(false);\r\n            setMessage(\"\");\r\n            setPoseDetectedImage(\"\");\r\n            // show the progress bar\r\n            setShowLoading(true);\r\n            const results = await axios.post(\r\n                `${HUMAN_POSE_ESTIMATION_ENDPOINT}`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n            setPoseDetectedImage(results.data);\r\n        } catch (e) {\r\n            // some error occured, reset states and show message\r\n            setMessage(JSON.stringify(e));\r\n            setShowMessage(true);\r\n            setPoseDetectedImage(\"\");\r\n            console.log(e);\r\n        }\r\n\r\n        // we are done, now turn off the loading and progress bar\r\n        setShowLoading(false);\r\n\r\n        setTimeout(() => {\r\n            setUploadPercentage(0);\r\n        }, 5000);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Form>\r\n                <Row className=\"justify-content-around\">\r\n                    <Col>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label>\r\n                                <h5>\r\n                                    <strong>Select Human Pose Image</strong>\r\n                                </h5>\r\n                                <code>\r\n                                    NOTE: The image must have \"single\" human\r\n                                    with some pose\r\n                                </code>\r\n                            </Form.Label>\r\n\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={(e) =>\r\n                                        setHumanImage(e.target.files[0])\r\n                                    }\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {humanImage.name === undefined\r\n                                        ? \"Browse Human Image\"\r\n                                        : humanImage.name}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                            {humanImage.name && (\r\n                                <Image\r\n                                    src={URL.createObjectURL(humanImage)}\r\n                                    style={{ width: \"85%\" }}\r\n                                    className=\"mx-auto mt-5\"\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            )}\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5 mx-auto shadow-lg\"\r\n                        size=\"lg\"\r\n                        disabled={humanImage.name === undefined}\r\n                        onClick={() => detectPose()}\r\n                    >\r\n                        Detect Pose !\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* Show the Upload Progress */}\r\n                        <ProgressBar\r\n                            className=\"mt-5\"\r\n                            striped\r\n                            variant=\"dark\"\r\n                            now={uploadPercentage}\r\n                            label={`${uploadPercentage}%`}\r\n                            hidden={!showLoading}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                        hidden={!showLoading}\r\n                        disabled\r\n                        block\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />{\" \"}\r\n                        Loading...\r\n                    </Button>\r\n                </Row>\r\n                {poseDetectedImage !== \"\" && (\r\n                    <Row>\r\n                        <Col md={6} lg={6} className=\"mx-auto mt-5\">\r\n                            <h1 className=\"text-center\">Detected Pose</h1>\r\n                            <Image\r\n                                src={poseDetectedImage}\r\n                                style={{ width: \"85%\" }}\r\n                                className=\"mx-auto mt-5\"\r\n                                rounded\r\n                                fluid\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n                <Row>\r\n                    <Toast\r\n                        onClose={() => setShowMessage(false)}\r\n                        show={showMessage}\r\n                        className=\"mx-auto mt-5 bg-dark text-white shadow-lg\"\r\n                        as={Row}\r\n                    >\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>just now</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </Row>\r\n            </Form>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default HumanPoseEstimation;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Image,\r\n    Button,\r\n    Spinner,\r\n    Toast,\r\n    Alert,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { GENERATORS_ENDPOINT } from \"../constants/APIEndpoints\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst SRResult = ({ results }) => {\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-center\">\r\n                <Image src={results} style={{ width: \"85%\" }} rounded fluid />\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Button\r\n                    variant=\"dark\"\r\n                    className=\"shadow-lg mt-5\"\r\n                    size=\"md\"\r\n                    href={results}\r\n                    download=\"result.png\"\r\n                >\r\n                    Download\r\n                </Button>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst IFOSR = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [results, setResults] = useState(undefined);\r\n    const [showLoading, setShowLoading] = useState(false);\r\n\r\n    const onFileSelect = (e) => {\r\n        if (e.target.files.length === 1) {\r\n            setSelectedFile(e.target.files[0]);\r\n        } else {\r\n            setSelectedFile(null);\r\n        }\r\n    };\r\n\r\n    const superResoluteImage = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setResults(undefined);\r\n            setShowLoading(true);\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"file\", selectedFile);\r\n\r\n            // send a POST request to autencoder api endpoint\r\n            const results = await axios.post(\r\n                `${GENERATORS_ENDPOINT}/ifo-sr-gan`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                }\r\n            );\r\n\r\n            console.log(results);\r\n            setResults(results.data);\r\n        } catch (e) {\r\n            if (e.reponse !== undefined) {\r\n                console.log(e.response);\r\n                setMessage(JSON.stringify(e.response));\r\n            } else {\r\n                console.log(e);\r\n                setMessage(JSON.stringify(e));\r\n            }\r\n        }\r\n\r\n        setShowLoading(false);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading className=\"text-center\">\r\n                            IFO Super Resolution\r\n                        </Alert.Heading>\r\n                        <p>\r\n                            This is a follow up from the IFO Dataset, so in\r\n                            classifier we tried to classify a given image to a\r\n                            Identified Flying Object Class. In this Assignment\r\n                            we are going to convert a blurry identified flying\r\n                            object (low res image) into a high resolution image,\r\n                            i.e. if the IFO is of 100x100 then we are converting\r\n                            it into 200x200\r\n                        </p>\r\n                        <br />\r\n                        <p>\r\n                            <a\r\n                                href=\"https://github.com/satyajitghana/TSAI-DeepVision-EVA4.0-Phase-2/tree/master/08-SuperResolution_StyleTransfer/IFO_200\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                Link to Blurred IFO Images\r\n                            </a>\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"py-4\">\r\n                <Col lg={6} md={6} sm={10}>\r\n                    <Form>\r\n                        <Form.Group as={Row} className=\"justify-content-center\">\r\n                            <Form.Label>\r\n                                <h5>Select an Image</h5>\r\n                            </Form.Label>\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={onFileSelect}\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {selectedFile\r\n                                        ? selectedFile.name\r\n                                        : \"Please select an Image\"}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Row className=\"justify-content-center\">\r\n                        {selectedFile && (\r\n                            <Image\r\n                                src={URL.createObjectURL(selectedFile)}\r\n                                style={{ width: \"85%\" }}\r\n                                rounded\r\n                                fluid\r\n                            />\r\n                        )}\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Button\r\n                            variant=\"dark\"\r\n                            className=\"shadow-lg mt-5\"\r\n                            size=\"md\"\r\n                            disabled={selectedFile === null}\r\n                            onClick={superResoluteImage}\r\n                        >\r\n                            SuperResolution !\r\n                        </Button>\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col lg={6} md={6} sm={10}>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h5>Result</h5>\r\n                    </Row>\r\n                    {showLoading && (\r\n                        <Row className=\"justify-content-center mt-5\">\r\n                            <Spinner animation=\"grow\" size=\"lg\" />\r\n                        </Row>\r\n                    )}\r\n                    {results !== undefined && <SRResult results={results} />}\r\n                    <Toast\r\n                        onClose={() => setMessage(\"\")}\r\n                        show={message !== \"\"}\r\n                        className=\"mx-auto m-3 bg-dark text-white shadow-lg justify-content-center\"\r\n                        as={Row}\r\n                    >\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>just now</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </Col>\r\n            </Row>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default IFOSR;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Spinner,\r\n    Toast,\r\n    ProgressBar,\r\n    Image,\r\n} from \"react-bootstrap\";\r\nimport {\r\n    CLASSIFY_ENDPOINT,\r\n    FACE_ALIGN_ENDPOINT,\r\n} from \"../constants/APIEndpoints\";\r\nimport axios from \"axios\";\r\n\r\nimport ClassificationResult from \"./ClassificationResult\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst IndianFaceRecognizer = () => {\r\n    const [file, setFile] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"Please select a Face image\");\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n    const [results, setResults] = useState([]);\r\n    const [alignedFace, setAlignedFace] = useState(\"\");\r\n\r\n    // https://stackoverflow.com/questions/4998908/convert-data-uri-to-file-then-append-to-formdata\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(\",\"),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n    const classifyImage = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setAlignedFace(\"\");\r\n            setShowMessage(false);\r\n            setShowLoading(true);\r\n            setResults([]);\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file);\r\n\r\n            // align the face first\r\n            const aligned_face = await axios.post(\r\n                `${FACE_ALIGN_ENDPOINT}`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n\r\n            setAlignedFace(aligned_face.data);\r\n\r\n            const alignedFormData = new FormData();\r\n            const alignedFaceFile = dataURLtoBlob(aligned_face.data);\r\n            alignedFormData.append(\"file\", alignedFaceFile, \"aligned.jpg\");\r\n\r\n            // request classification from end-point\r\n            const results = await axios.post(\r\n                `${CLASSIFY_ENDPOINT}/indian-face`,\r\n                alignedFormData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n            // console.log(JSON.stringify(results.data));\r\n            setResults(results.data);\r\n        } catch (e) {\r\n            // some error occured, create a Toast !\r\n            setMessage(JSON.stringify(e));\r\n            setShowMessage(true);\r\n            setResults([]);\r\n        }\r\n\r\n        // we are done, now turn off the loading and progress bar\r\n        setShowLoading(false);\r\n\r\n        // reset the states\r\n        setTimeout(() => {\r\n            setUploadPercentage(0);\r\n        }, 5000);\r\n    };\r\n\r\n    const onFileSelect = (e) => {\r\n        if (e.target.files.length >= 1) {\r\n            setFile(e.target.files[0]);\r\n            setFileName(e.target.files[0].name);\r\n        } else {\r\n            setFileName(\"Please select a Face Image (should be in dataset)\");\r\n        }\r\n    };\r\n    return (\r\n        <FadeInContainer>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label className=\"mb-5\">\r\n                                <h5>\r\n                                    <strong>Select Face Image</strong>\r\n                                </h5>\r\n\r\n                                <p>Supported Faces are:</p>\r\n                                <code>\r\n                                    [\"Dr_APJ_Abdul_Kalam\", \"Dr_Sabita_Ghana\",\r\n                                    \"Gaur_Gopal_Das\", \"MS_Dhoni\",\r\n                                    \"Mukesh_Ambani\", \"Narendra_Modi\",\r\n                                    \"Ratan_Tata\", \"Rohan_Shravan\",\r\n                                    \"Sachin_Tendulkar\", \"Viswanathan_Anand\"]\r\n                                </code>\r\n                            </Form.Label>\r\n\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={onFileSelect}\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {fileName}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto\">\r\n                        {file.name && (\r\n                            <Image\r\n                                src={URL.createObjectURL(file)}\r\n                                style={{ width: \"85%\" }}\r\n                                className=\"mx-auto mt-5\"\r\n                                rounded\r\n                                fluid\r\n                            />\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5 mx-auto shadow-lg\"\r\n                        size=\"lg\"\r\n                        onClick={() => classifyImage()}\r\n                        disabled={file.name === undefined}\r\n                    >\r\n                        Align and Classify !\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto mt-5\">\r\n                        {alignedFace !== \"\" && (\r\n                            <Fragment>\r\n                                <h1 className=\"text-center\">Aligned Face</h1>\r\n                                <Image\r\n                                    src={alignedFace}\r\n                                    style={{ width: \"85%\" }}\r\n                                    className=\"mx-auto mt-5\"\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            </Fragment>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto mt-5\">\r\n                        {results.length > 0 && (\r\n                            <ClassificationResult results={results} />\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* Show the Upload Progress */}\r\n                        <ProgressBar\r\n                            className=\"mt-5\"\r\n                            striped\r\n                            variant=\"dark\"\r\n                            now={uploadPercentage}\r\n                            label={`${uploadPercentage}%`}\r\n                            hidden={!showLoading}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                        hidden={!showLoading}\r\n                        disabled\r\n                        block\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />{\" \"}\r\n                        Loading...\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Toast\r\n                        onClose={() => setShowMessage(false)}\r\n                        show={showMessage}\r\n                        className=\"mx-auto mt-5 bg-dark text-white shadow-lg\"\r\n                        as={Row}\r\n                    >\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>just now</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </Row>\r\n            </Form>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default IndianFaceRecognizer;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Spinner,\r\n    Toast,\r\n    ProgressBar,\r\n    Image,\r\n} from \"react-bootstrap\";\r\nimport {\r\n    CLASSIFY_ENDPOINT,\r\n    FACE_ALIGN_ENDPOINT,\r\n} from \"../constants/APIEndpoints\";\r\nimport axios from \"axios\";\r\n\r\nimport ClassificationResult from \"./ClassificationResult\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst LFWPlusRecognizer = () => {\r\n    const [file, setFile] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"Please select a Face image\");\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n    const [results, setResults] = useState([]);\r\n    const [alignedFace, setAlignedFace] = useState(\"\");\r\n\r\n    // https://stackoverflow.com/questions/4998908/convert-data-uri-to-file-then-append-to-formdata\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(\",\"),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n    const classifyImage = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setAlignedFace(\"\");\r\n            setShowMessage(false);\r\n            setShowLoading(true);\r\n            setResults([]);\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file);\r\n\r\n            // align the face first\r\n            const aligned_face = await axios.post(\r\n                `${FACE_ALIGN_ENDPOINT}`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n\r\n            setAlignedFace(aligned_face.data);\r\n\r\n            const alignedFormData = new FormData();\r\n            const alignedFaceFile = dataURLtoBlob(aligned_face.data);\r\n            alignedFormData.append(\"file\", alignedFaceFile, \"aligned.jpg\");\r\n\r\n            // request classification from end-point\r\n            const results = await axios.post(\r\n                `${CLASSIFY_ENDPOINT}/lfw-plus`,\r\n                alignedFormData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n            // console.log(JSON.stringify(results.data));\r\n            setResults(results.data);\r\n        } catch (e) {\r\n            // some error occured, create a Toast !\r\n            setMessage(JSON.stringify(e));\r\n            setShowMessage(true);\r\n            setResults([]);\r\n        }\r\n\r\n        // we are done, now turn off the loading and progress bar\r\n        setShowLoading(false);\r\n\r\n        // reset the states\r\n        setTimeout(() => {\r\n            setUploadPercentage(0);\r\n        }, 5000);\r\n    };\r\n\r\n    const onFileSelect = (e) => {\r\n        if (e.target.files.length >= 1) {\r\n            setFile(e.target.files[0]);\r\n            setFileName(e.target.files[0].name);\r\n        } else {\r\n            setFileName(\"Please select a Face Image (should be in dataset)\");\r\n        }\r\n    };\r\n    return (\r\n        <FadeInContainer>\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label className=\"mb-5\">\r\n                                <h5>\r\n                                    <strong>Select Face Image</strong>\r\n                                </h5>\r\n\r\n                                <p>Supported Faces are:</p>\r\n                                <code>\r\n                                    LFW Dataset + [\"Dr_APJ_Abdul_Kalam\",\r\n                                    \"Dr_Sabita_Ghana\", \"Gaur_Gopal_Das\",\r\n                                    \"MS_Dhoni\", \"Mukesh_Ambani\",\r\n                                    \"Narendra_Modi\", \"Ratan_Tata\",\r\n                                    \"Rohan_Shravan\", \"Sachin_Tendulkar\",\r\n                                    \"Viswanathan_Anand\"]\r\n                                </code>\r\n                                <p className=\"mt-1\">\r\n                                    LFW Dataset:{\" \"}\r\n                                    <a href=\"http://vis-www.cs.umass.edu/lfw/\">\r\n                                        http://vis-www.cs.umass.edu/lfw/\r\n                                    </a>\r\n                                </p>\r\n                            </Form.Label>\r\n\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={onFileSelect}\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {fileName}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto\">\r\n                        {file.name && (\r\n                            <Image\r\n                                src={URL.createObjectURL(file)}\r\n                                style={{ width: \"85%\" }}\r\n                                className=\"mx-auto mt-5\"\r\n                                rounded\r\n                                fluid\r\n                            />\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5 mx-auto shadow-lg\"\r\n                        size=\"lg\"\r\n                        onClick={() => classifyImage()}\r\n                        disabled={file.name === undefined}\r\n                    >\r\n                        Align and Classify !\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto mt-5\">\r\n                        {alignedFace !== \"\" && (\r\n                            <Fragment>\r\n                                <h1 className=\"text-center\">Aligned Face</h1>\r\n                                <Image\r\n                                    src={alignedFace}\r\n                                    style={{ width: \"85%\" }}\r\n                                    className=\"mx-auto mt-5\"\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            </Fragment>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6} lg={6} className=\"mx-auto mt-5\">\r\n                        {results.length > 0 && (\r\n                            <ClassificationResult results={results} />\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {/* Show the Upload Progress */}\r\n                        <ProgressBar\r\n                            className=\"mt-5\"\r\n                            striped\r\n                            variant=\"dark\"\r\n                            now={uploadPercentage}\r\n                            label={`${uploadPercentage}%`}\r\n                            hidden={!showLoading}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                        hidden={!showLoading}\r\n                        disabled\r\n                        block\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />{\" \"}\r\n                        Loading...\r\n                    </Button>\r\n                </Row>\r\n                <Row>\r\n                    <Toast\r\n                        onClose={() => setShowMessage(false)}\r\n                        show={showMessage}\r\n                        className=\"mx-auto mt-5 bg-dark text-white shadow-lg\"\r\n                        as={Row}\r\n                    >\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>just now</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </Row>\r\n            </Form>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default LFWPlusRecognizer;\r\n","import { css } from \"styled-components\";\r\nimport { pxToEm, pxToRem } from \"./converters\";\r\n\r\nexport { pxToEm, pxToRem };\r\n\r\n/**\r\n * Default media breakpoints\r\n * @type {Object}\r\n */\r\nexport const defaultBreakpoints = {\r\n    huge: \"1440px\",\r\n    large: \"1170px\",\r\n    medium: \"768px\",\r\n    small: \"450px\",\r\n};\r\n\r\nfunction getSizeFromBreakpoint(breakpointValue, breakpoints = {}) {\r\n    if (breakpoints[breakpointValue]) {\r\n        return breakpoints[breakpointValue];\r\n    } else if (parseInt(breakpointValue)) {\r\n        return breakpointValue;\r\n    } else {\r\n        console.error(\r\n            \"styled-media-query: No valid breakpoint or size specified for media.\"\r\n        );\r\n        return \"0\";\r\n    }\r\n}\r\n\r\n/**\r\n * Media query generator\r\n * @param {Object} breakpoints - Map labels to breakpoint sizes\r\n * @return {Object} - Media generators for each breakpoint\r\n */\r\nexport function generateMedia(breakpoints = defaultBreakpoints) {\r\n    const lessThan = (breakpoint) => (...args) => css`\r\n        @media (max-width: ${getSizeFromBreakpoint(breakpoint, breakpoints)}) {\r\n            ${css(...args)}\r\n        }\r\n    `;\r\n\r\n    const greaterThan = (breakpoint) => (...args) => css`\r\n        @media (min-width: ${getSizeFromBreakpoint(breakpoint, breakpoints)}) {\r\n            ${css(...args)}\r\n        }\r\n    `;\r\n\r\n    const between = (firstBreakpoint, secondBreakpoint) => (...args) => css`\r\n        @media (min-width: ${getSizeFromBreakpoint(\r\n                firstBreakpoint,\r\n                breakpoints\r\n            )}) and (max-width: ${getSizeFromBreakpoint(\r\n                secondBreakpoint,\r\n                breakpoints\r\n            )}) {\r\n            ${css(...args)}\r\n        }\r\n    `;\r\n\r\n    const oldStyle = Object.keys(breakpoints).reduce(\r\n        (acc, label) => {\r\n            const size = breakpoints[label];\r\n\r\n            acc.to[label] = (...args) => {\r\n                console.warn(\r\n                    `styled-media-query: Use media.lessThan('${label}') instead of old media.to.${label} (Probably we'll deprecate it)`\r\n                );\r\n                return css`\r\n                    @media (max-width: ${size}) {\r\n                        ${css(...args)}\r\n                    }\r\n                `;\r\n            };\r\n\r\n            acc.from[label] = (...args) => {\r\n                console.warn(\r\n                    `styled-media-query: Use media.greaterThan('${label}') instead of old media.from.${label} (Probably we'll deprecate it)`\r\n                );\r\n                return css`\r\n                    @media (min-width: ${size}) {\r\n                        ${css(...args)}\r\n                    }\r\n                `;\r\n            };\r\n\r\n            return acc;\r\n        },\r\n        { to: {}, from: {} }\r\n    );\r\n\r\n    return Object.assign(\r\n        {\r\n            lessThan,\r\n            greaterThan,\r\n            between,\r\n        },\r\n        oldStyle\r\n    );\r\n}\r\n\r\n/**\r\n * Media object with default breakpoints\r\n * @return {object} - Media generators for each size\r\n */\r\nexport default generateMedia();\r\n\r\n/**\r\n * Usage: styled.div` ${media.from.medium`background: #000;`} `;\r\n * With this code, background for small and medium sizes will be `default` and for more than medium, will be `#000`\r\n */\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport media from \"../media\";\r\n\r\nconst StyledLoaderContainer = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst StyledLoader = styled.div`\r\n    .cls-1 {\r\n        stroke: #000;\r\n        stroke-miterlimit: 10;\r\n        stroke-width: 2px;\r\n    }\r\n    .cls-2 {\r\n        fill: #414042;\r\n    }\r\n    .cls-3 {\r\n        fill: #231f20;\r\n    }\r\n    .cls-4 {\r\n        fill: #a7a9ac;\r\n    }\r\n    .cls-5 {\r\n        fill: #bcbec0;\r\n    }\r\n    /***************************************************\r\n * Generated by SVG Artista on 10/11/2020, 2:05:39 PM\r\n * MIT license (https://opensource.org/licenses/MIT)\r\n * W. https://svgartista.net\r\n **************************************************/\r\n\r\n    svg {\r\n        width: 60vw;\r\n\r\n        ${media.lessThan(\"medium\")`\r\n            width: 95vw;\r\n        `}\r\n    }\r\n\r\n    svg .svg-elem-1 {\r\n        stroke-dashoffset: 154.52000427246094px;\r\n        stroke-dasharray: 154.52000427246094px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.8s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.8s;\r\n    }\r\n\r\n    svg.active .svg-elem-1 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-2 {\r\n        stroke-dashoffset: 205.18019104003906px;\r\n        stroke-dasharray: 205.18019104003906px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.12s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.9s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.12s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 0.9s;\r\n    }\r\n\r\n    svg.active .svg-elem-2 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-3 {\r\n        stroke-dashoffset: 192.25054931640625px;\r\n        stroke-dasharray: 192.25054931640625px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.24s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.24s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1s;\r\n    }\r\n\r\n    svg.active .svg-elem-3 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-4 {\r\n        stroke-dashoffset: 154.52000427246094px;\r\n        stroke-dasharray: 154.52000427246094px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.36s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.1s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.36s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.1s;\r\n    }\r\n\r\n    svg.active .svg-elem-4 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-5 {\r\n        stroke-dashoffset: 192.30667114257812px;\r\n        stroke-dasharray: 192.30667114257812px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.48s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.2000000000000002s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.48s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.2000000000000002s;\r\n    }\r\n\r\n    svg.active .svg-elem-5 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-6 {\r\n        stroke-dashoffset: 182.6975860595703px;\r\n        stroke-dasharray: 182.6975860595703px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.6s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.3s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.6s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.3s;\r\n    }\r\n\r\n    svg.active .svg-elem-6 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-7 {\r\n        stroke-dashoffset: 184.8169708251953px;\r\n        stroke-dasharray: 184.8169708251953px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.72s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.4000000000000001s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.72s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.4000000000000001s;\r\n    }\r\n\r\n    svg.active .svg-elem-7 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-8 {\r\n        stroke-dashoffset: 169.6847686767578px;\r\n        stroke-dasharray: 169.6847686767578px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.84s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.5s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.84s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.5s;\r\n    }\r\n\r\n    svg.active .svg-elem-8 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-9 {\r\n        stroke-dashoffset: 143.46194458007812px;\r\n        stroke-dasharray: 143.46194458007812px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 0.96s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.6s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                0.96s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.6s;\r\n    }\r\n\r\n    svg.active .svg-elem-9 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-10 {\r\n        stroke-dashoffset: 188.72247314453125px;\r\n        stroke-dasharray: 188.72247314453125px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.08s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.7000000000000002s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.08s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.7000000000000002s;\r\n    }\r\n\r\n    svg.active .svg-elem-10 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-11 {\r\n        stroke-dashoffset: 150.867431640625px;\r\n        stroke-dasharray: 150.867431640625px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.2s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.8s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.2s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.8s;\r\n    }\r\n\r\n    svg.active .svg-elem-11 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-12 {\r\n        stroke-dashoffset: 208.1418914794922px;\r\n        stroke-dasharray: 208.1418914794922px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.3199999999999998s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.9000000000000001s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.3199999999999998s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 1.9000000000000001s;\r\n    }\r\n\r\n    svg.active .svg-elem-12 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-13 {\r\n        stroke-dashoffset: 182.70567321777344px;\r\n        stroke-dasharray: 182.70567321777344px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.44s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.44s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2s;\r\n    }\r\n\r\n    svg.active .svg-elem-13 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(0, 0, 0);\r\n    }\r\n\r\n    svg .svg-elem-14 {\r\n        stroke-dashoffset: 214.53773498535156px;\r\n        stroke-dasharray: 214.53773498535156px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.56s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.1s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.56s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.1s;\r\n    }\r\n\r\n    svg.active .svg-elem-14 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(65, 64, 66);\r\n    }\r\n\r\n    svg .svg-elem-15 {\r\n        stroke-dashoffset: 613.5953979492188px;\r\n        stroke-dasharray: 613.5953979492188px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.68s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.2s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.68s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.2s;\r\n    }\r\n\r\n    svg.active .svg-elem-15 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-16 {\r\n        stroke-dashoffset: 122.91931915283203px;\r\n        stroke-dasharray: 122.91931915283203px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.7999999999999998s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.3s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.7999999999999998s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.3s;\r\n    }\r\n\r\n    svg.active .svg-elem-16 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(167, 169, 172);\r\n    }\r\n\r\n    svg .svg-elem-17 {\r\n        stroke-dashoffset: 228.87330627441406px;\r\n        stroke-dasharray: 228.87330627441406px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 1.92s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.4000000000000004s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                1.92s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.4000000000000004s;\r\n    }\r\n\r\n    svg.active .svg-elem-17 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-18 {\r\n        stroke-dashoffset: 71.49703979492188px;\r\n        stroke-dasharray: 71.49703979492188px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.04s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.5s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.04s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.5s;\r\n    }\r\n\r\n    svg.active .svg-elem-18 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-19 {\r\n        stroke-dashoffset: 32.64295959472656px;\r\n        stroke-dasharray: 32.64295959472656px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.16s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.6s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.16s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.6s;\r\n    }\r\n\r\n    svg.active .svg-elem-19 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(188, 190, 192);\r\n    }\r\n\r\n    svg .svg-elem-20 {\r\n        stroke-dashoffset: 59.49979019165039px;\r\n        stroke-dasharray: 59.49979019165039px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.28s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.7s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.28s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.7s;\r\n    }\r\n\r\n    svg.active .svg-elem-20 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-21 {\r\n        stroke-dashoffset: 238.18402099609375px;\r\n        stroke-dasharray: 238.18402099609375px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.4s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.8s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.4s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.8s;\r\n    }\r\n\r\n    svg.active .svg-elem-21 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-22 {\r\n        stroke-dashoffset: 32.588409423828125px;\r\n        stroke-dasharray: 32.588409423828125px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.52s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.9000000000000004s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.52s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 2.9000000000000004s;\r\n    }\r\n\r\n    svg.active .svg-elem-22 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(167, 169, 172);\r\n    }\r\n\r\n    svg .svg-elem-23 {\r\n        stroke-dashoffset: 61.71234893798828px;\r\n        stroke-dasharray: 61.71234893798828px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.6399999999999997s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.6399999999999997s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3s;\r\n    }\r\n\r\n    svg.active .svg-elem-23 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-24 {\r\n        stroke-dashoffset: 59.52915573120117px;\r\n        stroke-dasharray: 59.52915573120117px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.76s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3.1000000000000005s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.76s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3.1000000000000005s;\r\n    }\r\n\r\n    svg.active .svg-elem-24 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-25 {\r\n        stroke-dashoffset: 7.948788642883301px;\r\n        stroke-dasharray: 7.948788642883301px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 2.88s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3.2s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715)\r\n                2.88s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3.2s;\r\n    }\r\n\r\n    svg.active .svg-elem-25 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n\r\n    svg .svg-elem-26 {\r\n        stroke-dashoffset: 7.973469257354736px;\r\n        stroke-dasharray: 7.973469257354736px;\r\n        fill: transparent;\r\n        -webkit-transition: stroke-dashoffset 1s\r\n                cubic-bezier(0.47, 0, 0.745, 0.715) 3s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3.3s;\r\n        transition: stroke-dashoffset 1s cubic-bezier(0.47, 0, 0.745, 0.715) 3s,\r\n            fill 0.7s cubic-bezier(0.47, 0, 0.745, 0.715) 3.3s;\r\n    }\r\n\r\n    svg.active .svg-elem-26 {\r\n        stroke-dashoffset: 0;\r\n        fill: rgb(35, 31, 32);\r\n    }\r\n`;\r\n\r\nconst Loader = (props) => {\r\n    useEffect(() => {\r\n        // effect\r\n        const start = setTimeout(() => {\r\n            document.getElementById(\"logo\").classList.add(\"active\");\r\n        }, 10);\r\n        const erase = setTimeout(() => {\r\n            document.getElementById(\"logo\").classList.remove(\"active\");\r\n        }, 4000);\r\n        const end = setTimeout(() => {\r\n            if (props.onFinishLoad) {\r\n                props.onFinishLoad();\r\n            }\r\n        }, 7010);\r\n        return () => {\r\n            // cleanup\r\n            clearTimeout(start);\r\n            clearTimeout(erase);\r\n            clearTimeout(end);\r\n        };\r\n    }, [props]);\r\n\r\n    return (\r\n        <StyledLoaderContainer>\r\n            <StyledLoader>\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    id=\"logo\"\r\n                    viewBox=\"0 0 637.52 107.41\"\r\n                    width=\"637.52001953125\"\r\n                    height=\"107.41000366210938\"\r\n                >\r\n                    <defs>\r\n                        <style></style>\r\n                    </defs>\r\n                    <title>Asset 1</title>\r\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\r\n                        <g id=\"Layer_3\" data-name=\"Layer 3\">\r\n                            <path\r\n                                class=\"cls-1 svg-elem-1\"\r\n                                d=\"M180,79.06h-6.7V39.94H161.17v-6.2h30.94v6.2H180Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-2\"\r\n                                d=\"M224.29,47.6a12.36,12.36,0,0,1,3,8.77V79.06h-6.7v-22a7.16,7.16,0,0,0-1.8-5.2,7.33,7.33,0,0,0-9.89.12,7.83,7.83,0,0,0-1.83,5.52V79.06h-6.69V33.8h6.69V45l-.06,6.51h.12A7.61,7.61,0,0,1,210,46.2a9.7,9.7,0,0,1,6.2-1.86A10.6,10.6,0,0,1,224.29,47.6Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-3\"\r\n                                d=\"M264.65,63.62H243.82v2.86a8.2,8.2,0,0,0,1.83,5.76,7,7,0,0,0,5.42,2,8.89,8.89,0,0,0,4.62-1,4.45,4.45,0,0,0,2.14-3h6.69a10.27,10.27,0,0,1-4.4,6.91A15.47,15.47,0,0,1,251,79.68q-6.27,0-9.95-3.62a12.85,12.85,0,0,1-3.69-9.58V57.55a12.81,12.81,0,0,1,3.69-9.61q3.69-3.6,9.95-3.6t9.95,3.6a12.81,12.81,0,0,1,3.69,9.61ZM243.82,59.1,258.2,59V57.49a8.34,8.34,0,0,0-1.83-5.8,6.89,6.89,0,0,0-5.36-2,6.81,6.81,0,0,0-5.36,2,8.45,8.45,0,0,0-1.83,5.83Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-4\"\r\n                                d=\"M291.56,79.06h-6.7V39.94H272.77v-6.2h30.94v6.2H291.56Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-5\"\r\n                                d=\"M339.05,63.62H318.22v2.86A8.19,8.19,0,0,0,320,72.24a7,7,0,0,0,5.43,2,8.89,8.89,0,0,0,4.62-1,4.49,4.49,0,0,0,2.14-3h6.69a10.27,10.27,0,0,1-4.4,6.91,15.5,15.5,0,0,1-9.11,2.57q-6.27,0-10-3.62a12.85,12.85,0,0,1-3.69-9.58V57.55a12.81,12.81,0,0,1,3.69-9.61q3.68-3.6,10-3.6t9.95,3.6a12.81,12.81,0,0,1,3.69,9.61ZM318.22,59.1,332.6,59V57.49a8.34,8.34,0,0,0-1.83-5.8,8.09,8.09,0,0,0-10.73,0,8.45,8.45,0,0,0-1.82,5.83Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-6\"\r\n                                d=\"M373.08,47.6q3,3.26,3,8.77V79.06h-6.69v-22a7.16,7.16,0,0,0-1.8-5.2,7.33,7.33,0,0,0-9.89.12,7.83,7.83,0,0,0-1.83,5.52V79.06h-6.7V45h6.64v6.51H356a7.64,7.64,0,0,1,2.79-5.27,9.72,9.72,0,0,1,6.2-1.86A10.57,10.57,0,0,1,373.08,47.6Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-7\"\r\n                                d=\"M398.44,79.68a14.36,14.36,0,0,1-8.9-2.57,9.14,9.14,0,0,1-3.69-6.91h6.7a4,4,0,0,0,1.8,2.79A7.17,7.17,0,0,0,398.44,74h2.61a7.19,7.19,0,0,0,4.58-1.24,4,4,0,0,0,1.55-3.35,3.79,3.79,0,0,0-1.36-3.1,8.6,8.6,0,0,0-4.09-1.55l-4.4-.68q-5.52-.81-8.1-3.13t-2.57-6.73A9,9,0,0,1,389.79,47q3.13-2.61,9.09-2.61h2.35a13.72,13.72,0,0,1,8.46,2.45,9.1,9.1,0,0,1,3.69,6.6h-6.69A3.79,3.79,0,0,0,405,50.91a6.7,6.7,0,0,0-3.72-.93h-2.35q-5.58,0-5.58,4.34a3.43,3.43,0,0,0,1.11,2.79,7.64,7.64,0,0,0,3.72,1.31l4.46.68q5.84.87,8.53,3.25c1.8,1.6,2.7,3.9,2.7,6.92A9.46,9.46,0,0,1,410.56,77q-3.26,2.73-9.51,2.73Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-8\"\r\n                                d=\"M427,76.12q-3.66-3.57-3.66-9.64V57.55q0-6.07,3.66-9.64t10-3.57q6.33,0,10,3.54t3.65,9.61v9q0,6.08-3.65,9.64t-10,3.56Q430.69,79.68,427,76.12Zm15.13-4.19a7.54,7.54,0,0,0,1.8-5.45V57.55a7.55,7.55,0,0,0-1.8-5.46,8,8,0,0,0-10.29,0,7.55,7.55,0,0,0-1.8,5.46v8.93a7.54,7.54,0,0,0,1.8,5.45,8,8,0,0,0,10.29,0Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-9\"\r\n                                d=\"M486.2,47.72q3.19,3.38,3.19,9.27v2.29h-6.88V57.55A7.92,7.92,0,0,0,480.68,52a7.57,7.57,0,0,0-10.23,0,7.92,7.92,0,0,0-1.83,5.58V79.06h-6.69V45h6.45v6.39q1.61-7,9.17-7A11.34,11.34,0,0,1,486.2,47.72Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-10\"\r\n                                d=\"M501.51,76.12a12.68,12.68,0,0,1-3.75-9.64V46.39q0-6.07,3.75-9.64t10.14-3.57c4.22,0,7.57,1.2,10.08,3.6a12.7,12.7,0,0,1,3.75,9.61h-6.7a7.46,7.46,0,0,0-1.86-5.4,7,7,0,0,0-5.27-1.92,7.17,7.17,0,0,0-5.3,1.89,7.26,7.26,0,0,0-1.89,5.37V66.48a7.36,7.36,0,0,0,1.89,5.39,7.11,7.11,0,0,0,5.3,1.92,7,7,0,0,0,5.24-1.92,7.36,7.36,0,0,0,1.89-5.39h6.7a12.7,12.7,0,0,1-3.75,9.61c-2.51,2.39-5.86,3.59-10.08,3.59S504,78.49,501.51,76.12Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-11\"\r\n                                d=\"M553.13,79.06a10.55,10.55,0,0,1-7.72-2.82,10.06,10.06,0,0,1-2.88-7.53V39.88h-10.3V33.8h17V68.71a4.29,4.29,0,0,0,1.12,3.13,4,4,0,0,0,3,1.15h11v6.07Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-12\"\r\n                                d=\"M595.78,47.44a10.39,10.39,0,0,1,3.54,8.31V79.06h-6.51V72.8h-.06a6.91,6.91,0,0,1-3.32,5,13,13,0,0,1-7.16,1.86A11.94,11.94,0,0,1,574,76.92a9.46,9.46,0,0,1-3.07-7.41,9.72,9.72,0,0,1,3.23-7.75c2.14-1.86,5.14-2.79,9-2.79h9.49v-3.1a5.43,5.43,0,0,0-1.74-4.31,7.3,7.3,0,0,0-5-1.51,8.35,8.35,0,0,0-4.61,1.14,4.67,4.67,0,0,0-2.14,3.2h-6.58a10.31,10.31,0,0,1,4.22-7.26,15,15,0,0,1,9.24-2.73Q592.24,44.4,595.78,47.44ZM590.3,72.77A5.65,5.65,0,0,0,592.62,68V63.56h-9.36A5.7,5.7,0,0,0,579.14,65,5.17,5.17,0,0,0,577.62,69a5.08,5.08,0,0,0,1.76,4.09,7.24,7.24,0,0,0,4.81,1.49A9.83,9.83,0,0,0,590.3,72.77Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-1 svg-elem-13\"\r\n                                d=\"M633.48,47.6a12.36,12.36,0,0,1,3,8.77V79.06h-6.7v-22a7.16,7.16,0,0,0-1.8-5.2,7.33,7.33,0,0,0-9.89.12,7.83,7.83,0,0,0-1.83,5.52V79.06h-6.69V45h6.63v6.51h.13a7.64,7.64,0,0,1,2.79-5.27,9.7,9.7,0,0,1,6.2-1.86A10.58,10.58,0,0,1,633.48,47.6Z\"\r\n                            ></path>\r\n                            <rect\r\n                                class=\"cls-2 svg-elem-14\"\r\n                                x=\"130.2\"\r\n                                y=\"2.12\"\r\n                                width=\"5.83\"\r\n                                height=\"103.17\"\r\n                                rx=\"2.91\"\r\n                            ></rect>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-15\"\r\n                                d=\"M62.79,107.41a1,1,0,0,1-.57-.19,1,1,0,0,1-.34-1,65.63,65.63,0,0,0,2.35-12.14v0c.75-7.77.23-18.41-6.55-25-7-6.77-19.8-8.32-24-8.82a65.66,65.66,0,0,0-8.61-.42h-.56c-4.23,0-7.58.06-11.81-2C7.46,55.29,3.22,50.65.09,44.06a1,1,0,0,1,1.59-1,24.82,24.82,0,0,0,7.48,6.23,17.85,17.85,0,0,0,2.09-6.63.92.92,0,0,1,.67-.8,22.23,22.23,0,0,0,3.86-1.55c4-2.09,6.31-4.92,8.7-7.91a38,38,0,0,1,8.79-8.65,34.1,34.1,0,0,1,5.92-3.21,37.43,37.43,0,0,1,8.65-2.44A31.59,31.59,0,0,1,50.2,10c.29-.66.61-1.31.93-1.92A31.33,31.33,0,0,1,56.91.27a.94.94,0,0,1,1.2-.1A27.85,27.85,0,0,1,68.32,13.38a27.43,27.43,0,0,1,1.45,11.91A51.38,51.38,0,0,1,86.32,52.92c3.93,18-3.37,32.43-6.69,37.8h0a51.77,51.77,0,0,1-11.89,13.36h0l0,0c-1.41,1.12-2.9,2.18-4.42,3.16A1,1,0,0,1,62.79,107.41Zm3.33-13.22v0a68.22,68.22,0,0,1-1.75,10c.75-.53,1.47-1.08,2.18-1.64h0l0,0A50,50,0,0,0,78,89.73h0c3.2-5.18,10.23-19.1,6.45-36.4A49.59,49.59,0,0,0,68.17,26.4a.93.93,0,0,1-.33-.83A25.52,25.52,0,0,0,66.54,14,25.78,25.78,0,0,0,57.67,2.19,29.8,29.8,0,0,0,52.8,8.92q-.45.87-.87,1.8A29.77,29.77,0,0,0,49.62,19a1,1,0,0,1-.8.82,36.1,36.1,0,0,0-8.9,2.41,32.37,32.37,0,0,0-5.59,3A36.71,36.71,0,0,0,26,33.57c-2.52,3.15-4.91,6.13-9.31,8.41a22.61,22.61,0,0,1-3.6,1.5A19.71,19.71,0,0,1,10.33,51a1,1,0,0,1-1.22.36A25,25,0,0,1,5.23,49a22.76,22.76,0,0,0,8.3,7.11C17.37,58,20.36,58,24.51,58h.56a67.73,67.73,0,0,1,8.84.43c4.36.53,17.62,2.13,25.09,9.34C66.32,74.78,66.91,86,66.12,94.19Zm1,9.15Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-4 svg-elem-16\"\r\n                                d=\"M65.18,94.12A32.86,32.86,0,0,0,53.64,72.77c-7.45-6-16.16-7-21.72-6.8a25.53,25.53,0,0,0-6.85-7.08,64.84,64.84,0,0,1,8.73.42c4.42.53,17.3,2.09,24.54,9.08C65.28,75.09,66,85.74,65.18,94.12Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-17\"\r\n                                d=\"M65.18,95.07a1,1,0,0,1-.94-.82A31.82,31.82,0,0,0,53,73.51C46,67.79,37.66,66.77,32,66.91a1,1,0,0,1-.83-.44,24.71,24.71,0,0,0-6.6-6.81,1,1,0,0,1-.35-1.06,1,1,0,0,1,.9-.66,67.73,67.73,0,0,1,8.84.43c4.36.53,17.62,2.13,25.09,9.34S66.91,86,66.12,94.21a1,1,0,0,1-.92.86ZM33,65c6,0,14.16,1.3,21.26,7A32.49,32.49,0,0,1,64.46,86.94c-.26-6.35-1.9-13.16-6.77-17.87-7-6.77-19.8-8.32-24-8.82a54.92,54.92,0,0,0-5.87-.4A25.78,25.78,0,0,1,32.43,65Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-18\"\r\n                                d=\"M18.92,90.6A.94.94,0,0,1,18,90a.93.93,0,0,1,.58-1.2c.55-.2,13.66-4.91,14.83-13.54a13.42,13.42,0,0,0-2.32-8.75.95.95,0,0,1,1.6-1,15.11,15.11,0,0,1,2.6,10C34,85.24,19.84,90.33,19.23,90.54A.85.85,0,0,1,18.92,90.6Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-5 svg-elem-19\"\r\n                                d=\"M12.19,42.75a18.87,18.87,0,0,1-2.66,7.79A26,26,0,0,1,1,43.65,29.17,29.17,0,0,0,12.19,42.75Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-20\"\r\n                                d=\"M9.53,51.48a1,1,0,0,1-.42-.09A26.73,26.73,0,0,1,.22,44.26a.94.94,0,0,1-.11-1,1,1,0,0,1,.93-.5,28.89,28.89,0,0,0,10.88-.86,1,1,0,0,1,1.21,1A19.8,19.8,0,0,1,10.33,51,.93.93,0,0,1,9.53,51.48ZM3.2,44.75a24.37,24.37,0,0,0,6,4.53A17.82,17.82,0,0,0,11,44,30.08,30.08,0,0,1,3.2,44.75Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-21\"\r\n                                d=\"M62.79,107.41a.94.94,0,0,1-.82-.49.93.93,0,0,1,.36-1.28,24.17,24.17,0,0,0,4.18-3h0l0,0c7.57-6.79,12.88-20.47,7.83-32.5-5.45-13-20.92-17.68-30.09-17.68h-.15c-1.57,0-3,.15-5.09.35-3,.28-7,.68-14,.9-6.6.22-10,.07-13.9-1.41-.68-.26-1.36-.56-2-.88a.95.95,0,0,1,.42-1.8,1,1,0,0,1,.47.13c.59.29,1.2.55,1.81.78,3.6,1.36,6.83,1.5,13.17,1.29,6.93-.22,11-.61,13.89-.9,2.09-.2,3.6-.35,5.26-.35a41.11,41.11,0,0,1,17.43,4.12c6.91,3.39,12,8.48,14.56,14.72,5.4,12.86-.27,27.46-8.34,34.66l0,0a25.42,25.42,0,0,1-4.49,3.2A.84.84,0,0,1,62.79,107.41Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-4 svg-elem-22\"\r\n                                d=\"M34.44,39.53c-.54-1,.78-2.77,1.29-3.48a8.48,8.48,0,0,1,2.39-2.19,31.8,31.8,0,0,1,4.05.39,31.29,31.29,0,0,1,5,1.22,15.8,15.8,0,0,1-6.44,4C38.89,40,35.17,40.82,34.44,39.53Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-23\"\r\n                                d=\"M36.5,41.17c-1.25,0-2.38-.28-2.88-1.17h0c-.85-1.5.64-3.53,1.35-4.51a9.2,9.2,0,0,1,2.65-2.43.89.89,0,0,1,.52-.14,31.44,31.44,0,0,1,9.3,1.66,1,1,0,0,1,.62.68.94.94,0,0,1-.26.88,16.74,16.74,0,0,1-11.3,5Zm-1.23-2.11c.29.36,2.48.34,5.14-.5a14.25,14.25,0,0,0,4.86-2.67A33,33,0,0,0,42,35.18a31.59,31.59,0,0,0-3.64-.36,7.29,7.29,0,0,0-1.88,1.79C35.13,38.48,35.24,39,35.27,39.06Zm0,0Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-24\"\r\n                                d=\"M39.55,22.35a.94.94,0,0,1-.93-.8,27.29,27.29,0,0,1,0-8.51A27.57,27.57,0,0,1,40.73,5.9a1,1,0,0,1,1-.54,22.51,22.51,0,0,1,9.88,4.23A.94.94,0,1,1,50.5,11.1a20.64,20.64,0,0,0-8.34-3.74,25.45,25.45,0,0,0-1.67,13.89,1,1,0,0,1-.79,1.09Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-25\"\r\n                                d=\"M65.18,95.07a1,1,0,0,1-1-.94h0a.95.95,0,1,1,1,.95Z\"\r\n                            ></path>\r\n                            <path\r\n                                class=\"cls-3 svg-elem-26\"\r\n                                d=\"M9.53,51.48a.94.94,0,0,1-.95-.94h0a.95.95,0,1,1,.95.94Z\"\r\n                            ></path>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n            </StyledLoader>\r\n        </StyledLoaderContainer>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    body {\r\n        font-family: ${(props) => props.theme.fontFamily};\r\n        background: #ffffff;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport { Container, Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    const cardsData = [\r\n        {\r\n            title: \"Classifier Models\",\r\n            body:\r\n                \"The models included are: ImageNetClassifier - ResNet, IFOClassifier - MobileNet\",\r\n            btntext: \"Go to Classifiers\",\r\n            url: \"/classifiers\",\r\n        },\r\n        {\r\n            title: \"Face Swap\",\r\n            body:\r\n                \"Do you want to see how two people look likewhen their faces are swapped ? Head over to this API to see !\",\r\n            btntext: \"Go to FaceSwap\",\r\n            url: \"/face-swap\",\r\n        },\r\n        {\r\n            title: \"Style Transfer\",\r\n            body:\r\n                \"Try out various awesome image filter styles on your image/portraits!\",\r\n            btntext: \"Go to StyleTransfer\",\r\n            url: \"/style-transfer\",\r\n        },\r\n        {\r\n            title: \"Image Captioning\",\r\n            body: \"This is an Image to Text Tranlation tool\",\r\n            btntext: \"Go to ImageCaptioning\",\r\n            url: \"/image-captioning\"\r\n        },\r\n        {\r\n            title: \"MNIST VAE\",\r\n            body:\r\n                \"Play with the MNIST VAE, see how a machine learns to encode and decode information\",\r\n            btntext: \"Go to VAE\",\r\n            url: \"/mnist-vae\",\r\n        },\r\n        {\r\n            title: \"Text Classifiers\",\r\n            body:\r\n                \"Try various different text classification nlp models, from sentiment analysis to multi class classification\",\r\n            btntext: \"Go to TextClassifiers\",\r\n            url: \"text-classifiers\",\r\n        },\r\n        {\r\n            title: \"Speech to Text\",\r\n            body: \"Try saying a word and my model will convert it to text !\",\r\n            btntext: \"Go to SpeechToText\",\r\n            url: \"speech-to-text\",\r\n        },\r\n        {\r\n            title: \"Indian Face Recognizer\",\r\n            body:\r\n                \"I've trained the model to recognize 10 Indian people Faces !\",\r\n            btntext: \"Go to FaceRecognizer\",\r\n            url: \"/indian-face-recognizer\",\r\n        },\r\n        {\r\n            title: \"LWF Plus Facial Recognition\",\r\n            body:\r\n                \"The Model here was trained on LFW Dataset + Indian Faces Dataset\",\r\n            btntext: \"Go to FaceRecognizer\",\r\n            url: \"/lfw-plus-recognizer\",\r\n        },\r\n        {\r\n            title: \"Human Pose Estimation\",\r\n            body:\r\n                \" This model uses SOTA Human Pose Estimation for Single Human Pose Detection\",\r\n            btntext: \"Go to HumanPoseEstimator\",\r\n            url: \"/human-pose-estimation\",\r\n        },\r\n        {\r\n            title: \"Red Car Generator\",\r\n            body: \"This is a custom GAN to generate Red Coloured Cars !\",\r\n            btntext: \"Go to RedCarGAN\",\r\n            url: \"/red-car-gan\",\r\n        },\r\n        {\r\n            title: \"Red Car VAE\",\r\n            body:\r\n                \"Reconstructs a Red Car Image, see how well it does, something like this can be used for Image compression\",\r\n            btntext: \"Go to RedCarVAE\",\r\n            url: \"/red-car-vae\",\r\n        },\r\n        {\r\n            title: \"IFO Super Resolution\",\r\n            body:\r\n                \"Convert a Low Resolution Identified Flying Object and super resolution it to 2X !\",\r\n            btntext: \"Go to SuperResolution\",\r\n            url: \"ifo-sr\",\r\n        },\r\n        {\r\n            title: \"DE to EN Translator\",\r\n            body:\r\n                \"This is a pretty simple German to English text translator that can translate upto 100 words pretty decently !\",\r\n            btntext: \"Go to Translator\",\r\n            url: \"translator\",\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Container className=\"mt-5 uk-animation-scale-up\">\r\n            <Row xl={3} xs={1} className=\"justify-content-around\">\r\n                {cardsData.map((card, idx) => (\r\n                    <Container\r\n                        key={idx}\r\n                        as={Col}\r\n                        className=\"p-2\"\r\n                        data-uk-scrollspy={`cls: uk-animation-slide-bottom; target: .uk-card; delay: ${idx * 50\r\n                            } ; repeat: false`}\r\n                    >\r\n                        <Card\r\n                            className=\"shadow-lg p-0 m-0 uk-card\"\r\n                            style={{\r\n                                minWidth: \"18rem\",\r\n                                height: \"15rem\",\r\n                            }}\r\n                            as={Col}\r\n                        >\r\n                            <Card.Body>\r\n                                <Card.Title>{card.title}</Card.Title>\r\n                                <Card.Text>{card.body}</Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Link to={card.url}>\r\n                                    <Button variant=\"dark\" as={Col}>\r\n                                        {card.btntext}{\" \"}\r\n                                        <i className=\"fas fa-arrow-right\" />\r\n                                    </Button>\r\n                                </Link>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Container>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    ToggleButton,\r\n    ButtonGroup,\r\n    Spinner,\r\n    Button,\r\n    Toast,\r\n    Image,\r\n    Alert,\r\n} from \"react-bootstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { GENERATORS_ENDPOINT } from \"../constants/APIEndpoints\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst scale = (num, in_min, in_max, out_min, out_max) => {\r\n    return ((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\nconst componentToHex = (c) => {\r\n    var hex = c.toString(16);\r\n    return hex.length === 1 ? \"0\" + hex : hex;\r\n};\r\n\r\nconst rgbToHex = (r, g, b) => {\r\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n};\r\n\r\nconst getBgAndTextColor = (f) => {\r\n    const bg_scaled = Math.floor(scale(f, -1, 1, 0, 255));\r\n    let text_scaled = 255 - bg_scaled;\r\n\r\n    if (bg_scaled >= 80 && bg_scaled <= 180) {\r\n        text_scaled = 255;\r\n    }\r\n\r\n    return [\r\n        rgbToHex(bg_scaled, bg_scaled, bg_scaled),\r\n        rgbToHex(text_scaled, text_scaled, text_scaled),\r\n    ];\r\n};\r\n\r\nconst LATENTZ_SIZE = 64;\r\n\r\nconst RedCarGAN = () => {\r\n    // why 64 ? because thats the size car gan expects for the latent z vector\r\n    const [latentz, setLatentz] = useState(\r\n        Array.from(Array(LATENTZ_SIZE)).map((x) => Math.random() * 2.0 - 1.0)\r\n    );\r\n\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [result, setResult] = useState(\"\");\r\n\r\n    const [currIdx, setCurrIdx] = useState(0);\r\n\r\n    // useEffect(() => {\r\n    //     // effect\r\n    //     onGeneratorClicked();\r\n    //     return () => {\r\n    //         // cleanup\r\n    //     };\r\n    // }, [latentz]);\r\n\r\n    const sliderChange = (event) => {\r\n        let newLatentZ = [...latentz];\r\n        newLatentZ[currIdx] = parseFloat(event.target.value);\r\n        setLatentz(newLatentZ);\r\n    };\r\n\r\n    const selectValue = (index) => {\r\n        setCurrIdx(index);\r\n    };\r\n\r\n    const makePositive = () => {\r\n        const newLatentZ = latentz.map((e) => Math.abs(e));\r\n        setLatentz(newLatentZ);\r\n    };\r\n\r\n    const makeNegative = () => {\r\n        const newLatentZ = latentz.map((e) => -1.0 * Math.abs(e));\r\n        setLatentz(newLatentZ);\r\n    };\r\n\r\n    const makeRandom = () => {\r\n        const newLatentZ = latentz.map((e) => Math.random() * 2.0 - 1.0);\r\n        setLatentz(newLatentZ);\r\n    };\r\n\r\n    const makeRandomLg = () => {\r\n        const newLatentZ = latentz.map((e) => Math.random() * 20.0 - 10.0);\r\n        setLatentz(newLatentZ);\r\n    };\r\n\r\n    const onGeneratorClicked = async () => {\r\n        try {\r\n            // Reset all the states and show loading\r\n            setMessage(\"\");\r\n            setResult(\"\");\r\n            setShowLoading(true);\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"latent_z\", latentz);\r\n            // console.log(...formData);\r\n\r\n            // send the latent_z vector to server\r\n            const generatedCar = await axios.post(\r\n                `${GENERATORS_ENDPOINT}/red-car-gan-generator`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                }\r\n            );\r\n\r\n            setResult(generatedCar.data);\r\n        } catch (e) {\r\n            setMessage(JSON.stringify(e));\r\n            setResult(\"\");\r\n        }\r\n\r\n        // done with the request, close the loading widget\r\n        setShowLoading(false);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading>\r\n                            Instructions on using Car GAN\r\n                        </Alert.Heading>\r\n                        <p>\r\n                            This is a very simple model, which was done using\r\n                            3.5M parameters\r\n                            <ul>\r\n                                <li>Select the value you want to change</li>\r\n                                <li>Slide the slider to change the value</li>\r\n                                <li>Click on Generate !</li>\r\n                            </ul>\r\n                            I've provided a few Presets you can play with, try\r\n                            them out ! see which parameters affect which part of\r\n                            the car.\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg={6} md={6} sm={10}>\r\n                    <h2 className=\"text-center\">Select Values</h2>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Button\r\n                            variant=\"dark\"\r\n                            className=\"mb-3 mx-auto shadow-md\"\r\n                            size=\"md\"\r\n                            onClick={onGeneratorClicked}\r\n                        >\r\n                            Generate !\r\n                        </Button>\r\n                    </Row>\r\n                    <Row>\r\n                        <p>Presets</p>\r\n                    </Row>\r\n                    <Row>\r\n                        <Button\r\n                            as={Col}\r\n                            variant=\"dark\"\r\n                            className=\"mb-3 mx-1 shadow-md\"\r\n                            size=\"md\"\r\n                            onClick={makePositive}\r\n                        >\r\n                            Positive\r\n                        </Button>\r\n\r\n                        <Button\r\n                            as={Col}\r\n                            variant=\"dark\"\r\n                            className=\"mb-3 mx-1 shadow-md\"\r\n                            size=\"md\"\r\n                            onClick={makeNegative}\r\n                        >\r\n                            Negative\r\n                        </Button>\r\n\r\n                        <Button\r\n                            as={Col}\r\n                            variant=\"dark\"\r\n                            className=\"mb-3 mx-1 shadow-md\"\r\n                            size=\"md\"\r\n                            onClick={makeRandom}\r\n                        >\r\n                            Randomize\r\n                        </Button>\r\n\r\n                        <Button\r\n                            as={Col}\r\n                            variant=\"dark\"\r\n                            className=\"mb-3 mx-1 shadow-md\"\r\n                            size=\"md\"\r\n                            onClick={makeRandomLg}\r\n                        >\r\n                            Random Lg\r\n                        </Button>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center p-3\">\r\n                        <input\r\n                            type=\"range\"\r\n                            className=\"form-control-range\"\r\n                            min=\"-1\"\r\n                            max=\"1\"\r\n                            step=\"0.02\"\r\n                            value={latentz[currIdx]}\r\n                            onChange={sliderChange}\r\n                        />\r\n                    </Row>\r\n                    <Row xs=\"4\" className=\"mt-3\">\r\n                        {latentz.map((val, idx) => (\r\n                            <ButtonGroup toggle>\r\n                                <ToggleButton\r\n                                    key={idx}\r\n                                    type=\"checkbox\"\r\n                                    variant=\"outline-dark\"\r\n                                    onClick={() => selectValue(idx)}\r\n                                    as={Col}\r\n                                    value=\"1\"\r\n                                    className=\"p-1 m-2\"\r\n                                    style={{\r\n                                        backgroundColor: getBgAndTextColor(\r\n                                            val\r\n                                        )[0],\r\n                                        color: getBgAndTextColor(val)[1],\r\n                                    }}\r\n                                >\r\n                                    {val.toFixed(2)}\r\n                                </ToggleButton>\r\n                            </ButtonGroup>\r\n                        ))}\r\n                    </Row>\r\n                </Col>\r\n                <Col lg={6} md={6} sm={10}>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h2 className=\"text-center\">Result</h2>\r\n                    </Row>\r\n                    {showLoading && (\r\n                        <Row className=\"justify-content-center mt-5\">\r\n                            <Spinner animation=\"grow\" size=\"lg\" />\r\n                        </Row>\r\n                    )}\r\n                    <Row className=\"p-3 justify-content-center\">\r\n                        <Toast\r\n                            onClose={() => setMessage(\"\")}\r\n                            show={message !== \"\"}\r\n                            className=\"mx-auto m-3 bg-dark text-white shadow-lg\"\r\n                            as={Row}\r\n                        >\r\n                            <Toast.Header>\r\n                                <strong className=\"mr-auto\">Message</strong>\r\n                                <small>just now</small>\r\n                            </Toast.Header>\r\n                            <Toast.Body>{message}</Toast.Body>\r\n                        </Toast>\r\n\r\n                        {result !== \"\" && (\r\n                            <Image\r\n                                src={result}\r\n                                style={{ width: \"85%\" }}\r\n                                className=\"mx-auto mt-5\"\r\n                                rounded\r\n                                fluid\r\n                            />\r\n                        )}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default RedCarGAN;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Image,\r\n    Button,\r\n    Spinner,\r\n    Toast,\r\n    Alert,\r\n} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { AUTOENCODERS_ENDPOINT } from \"../constants/APIEndpoints\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst VAEResult = ({ results }) => {\r\n    const { recon_image, latent_z } = results;\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-center\">\r\n                <Image\r\n                    src={recon_image}\r\n                    style={{ width: \"85%\" }}\r\n                    rounded\r\n                    fluid\r\n                />\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Button\r\n                    variant=\"dark\"\r\n                    className=\"shadow-lg mt-5\"\r\n                    size=\"md\"\r\n                    href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                        JSON.stringify(latent_z)\r\n                    )}`}\r\n                    download=\"latentz.json\"\r\n                >\r\n                    Download LatentZ (Encoded)\r\n                </Button>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nconst RedCarVAE = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [results, setResults] = useState(undefined);\r\n    const [showLoading, setShowLoading] = useState(false);\r\n\r\n    const onFileSelect = (e) => {\r\n        if (e.target.files.length === 1) {\r\n            setSelectedFile(e.target.files[0]);\r\n        } else {\r\n            setSelectedFile(null);\r\n        }\r\n    };\r\n\r\n    const autoEncodeImage = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setResults(undefined);\r\n            setShowLoading(true);\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"file\", selectedFile);\r\n\r\n            // send a POST request to autencoder api endpoint\r\n            const results = await axios.post(\r\n                `${AUTOENCODERS_ENDPOINT}/red-car-autoencoder`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                }\r\n            );\r\n\r\n            console.log(results);\r\n            setResults(results.data);\r\n        } catch (e) {\r\n            console.log(e.response);\r\n            setMessage(JSON.stringify(e.response));\r\n        }\r\n\r\n        setShowLoading(false);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading>Red CAR VAE</Alert.Heading>\r\n                        <p>\r\n                            This is a follow up from the Red Car GAN, the only\r\n                            difference is that we are using a VAE (Variational\r\n                            AutoEncoder) here, so what's the benefit ? it can be\r\n                            used to compress(encode) images to small size and\r\n                            can be generated from the encoded vector using the\r\n                            decoder. So here is a demonstration in which you can\r\n                            upload a car image and it will encode and decode it,\r\n                            shows the proof of concept.\r\n                        </p>\r\n                        <br />\r\n                        <p>\r\n                            <a\r\n                                href=\"https://github.com/satyajitghana/TSAI-DeepVision-EVA4.0-Phase-2/tree/master/06-GenerativeAdversarialNetworks/car_images_100x100/red_cars\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                Link to Car Images\r\n                            </a>\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"py-4\">\r\n                <Col lg={6} md={6} sm={10}>\r\n                    <Form>\r\n                        <Form.Group as={Row} className=\"justify-content-center\">\r\n                            <Form.Label>\r\n                                <h5>Select an Image</h5>\r\n                            </Form.Label>\r\n                            <Form.File custom>\r\n                                <Form.File.Input\r\n                                    onChange={onFileSelect}\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {selectedFile\r\n                                        ? selectedFile.name\r\n                                        : \"Please select an Image\"}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Row className=\"justify-content-center\">\r\n                        {selectedFile && (\r\n                            <Image\r\n                                src={URL.createObjectURL(selectedFile)}\r\n                                style={{ width: \"85%\" }}\r\n                                rounded\r\n                                fluid\r\n                            />\r\n                        )}\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Button\r\n                            variant=\"dark\"\r\n                            className=\"shadow-lg mt-5\"\r\n                            size=\"md\"\r\n                            disabled={selectedFile === null}\r\n                            onClick={autoEncodeImage}\r\n                        >\r\n                            AutoEncode !\r\n                        </Button>\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col lg={6} md={6} sm={10}>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h5>Result</h5>\r\n                    </Row>\r\n                    {showLoading && (\r\n                        <Row className=\"justify-content-center mt-5\">\r\n                            <Spinner animation=\"grow\" size=\"lg\" />\r\n                        </Row>\r\n                    )}\r\n                    {results !== undefined && <VAEResult results={results} />}\r\n                    <Toast\r\n                        onClose={() => setMessage(\"\")}\r\n                        show={message !== \"\"}\r\n                        className=\"mx-auto m-3 bg-dark text-white shadow-lg justify-content-center\"\r\n                        as={Row}\r\n                    >\r\n                        <Toast.Header>\r\n                            <strong className=\"mr-auto\">Message</strong>\r\n                            <small>just now</small>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                </Col>\r\n            </Row>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default RedCarVAE;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Form,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    InputGroup,\r\n    Alert,\r\n    Toast,\r\n    Spinner,\r\n    Table,\r\n} from \"react-bootstrap\";\r\n\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\nimport { TEXT_ENDPOINT } from \"../constants/APIEndpoints\";\r\n\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst TextClassificationResult = ({ results }) => {\r\n    return (\r\n        <FadeInContainer>\r\n            <Table size=\"sm\" striped bordered responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <th>label_idx</th>\r\n                        <th>label_name</th>\r\n                        <th>confidence</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {results.map((e, idx) => (\r\n                        <tr key={idx}>\r\n                            <td>{e.label_idx}</td>\r\n                            <td>{e.label_name}</td>\r\n                            <td>{e.confidence.toFixed(4)}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nconst TextClassifier = () => {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [result, setResult] = useState([]);\r\n\r\n    const classifyImage = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setMessage(\"\");\r\n            setResult([]);\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"input_text\", inputText);\r\n\r\n            // console.log(`${TEXT_ENDPOINT}/conv-sentimental-mclass`);\r\n\r\n            const result = await axios.post(\r\n                `${TEXT_ENDPOINT}/conv-sentimental-mclass`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                }\r\n            );\r\n\r\n            // console.log(result.data);\r\n            setResult(result.data);\r\n        } catch (e) {\r\n            if (e.reponse !== undefined) {\r\n                console.log(e.response);\r\n                setMessage(JSON.stringify(e.response));\r\n            } else {\r\n                console.log(e);\r\n                setMessage(JSON.stringify(e));\r\n            }\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row className=\"mb-4\">\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading className=\"text-center\">\r\n                            Text Classifier\r\n                        </Alert.Heading>\r\n                        <p>\r\n                            These constitute of various NLP Models for Text\r\n                            Classification, the demo here is of a MultiClass\r\n                            Text Question Type Classification. Just type in a\r\n                            query and hit classify!\r\n                            <br />\r\n                            The 6 labels (for the non-fine-grained case)\r\n                            correspond to the 6 types of questions in the\r\n                            dataset:\r\n                            <ul>\r\n                                <li>HUM for questions about humans</li>\r\n                                <li>ENTY for questions about entities</li>\r\n                                <li>\r\n                                    DESC for questions asking you for a\r\n                                    description\r\n                                </li>\r\n                                <li>\r\n                                    NUM for questions where the answer is\r\n                                    numerical\r\n                                </li>\r\n                                <li>\r\n                                    LOC for questions where the answer is a\r\n                                    location\r\n                                </li>\r\n                                <li>\r\n                                    ABBR for questions asking about\r\n                                    abbreviations\r\n                                </li>\r\n                            </ul>\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Form>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={7} sm={10}>\r\n                        <InputGroup>\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>\r\n                                    {\" \"}\r\n                                    <span role=\"img\" aria-label=\"text\">\r\n                                        📄\r\n                                    </span>\r\n                                </InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <Form.Control\r\n                                size=\"lg\"\r\n                                type=\"text\"\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter a Sentence\"\r\n                                onChange={(e) => {\r\n                                    setInputText(e.target.value);\r\n                                }}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={2} sm={10} className=\"my-auto\">\r\n                        <Button\r\n                            variant=\"dark\"\r\n                            className=\"shadow-lg mt-2\"\r\n                            size=\"lg\"\r\n                            disabled={inputText.length === 0 && loading}\r\n                            onClick={() => {\r\n                                classifyImage();\r\n                            }}\r\n                        >\r\n                            {loading ? (\r\n                                <>\r\n                                    <Spinner\r\n                                        variant=\"light\"\r\n                                        as=\"span\"\r\n                                        animation=\"border\"\r\n                                        size=\"md\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    />\r\n                                    Classifying...\r\n                                </>\r\n                            ) : (\r\n                                \"Classify!\"\r\n                            )}\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-4 justify-content-center\">\r\n                    {result.length !== 0 && (\r\n                        <TextClassificationResult results={result} />\r\n                    )}\r\n                </Row>\r\n                <Toast\r\n                    onClose={() => setMessage(\"\")}\r\n                    show={message !== \"\"}\r\n                    className=\"mx-auto m-3 bg-dark text-white shadow-lg justify-content-center\"\r\n                    as={Row}\r\n                >\r\n                    <Toast.Header>\r\n                        <strong className=\"mr-auto\">Message</strong>\r\n                        <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{message}</Toast.Body>\r\n                </Toast>\r\n            </Form>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default TextClassifier;\r\n","import ndarray from \"ndarray\";\r\nimport ops from \"ndarray-ops\";\r\nimport { Tensor } from \"onnxjs\";\r\nimport colormap from \"colormap\";\r\n\r\nexport async function warmupModel(model, dims) {\r\n    // OK. we generate a random input and call Session.run() as a warmup query\r\n    const size = dims.reduce((a, b) => a * b);\r\n    const warmupTensor = new Tensor(new Float32Array(size), \"float32\", dims);\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        warmupTensor.data[i] = Math.random() * 2.0 - 1.0; // random value [-1.0, 1.0)\r\n    }\r\n    try {\r\n        console.log(\"warming up da model\");\r\n        const warmOut = await model.run([warmupTensor]);\r\n        // console.log(warmOut);\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\nexport function imageDataRgbaToNdarray(imageData) {\r\n    const { data, width, height } = imageData;\r\n\r\n    const dataArray = ndarray(new Float32Array(data), [width, height, 4]);\r\n\r\n    return dataArray;\r\n}\r\n\r\nexport function NdarrayAlphaToMono(imageArray) {\r\n    var result = ndarray(\r\n        new Float32Array(imageArray.shape[0] * imageArray.shape[1]),\r\n        [imageArray.shape[0], imageArray.shape[1]]\r\n    );\r\n\r\n    ops.assign(result, imageArray.pick(null, null, 3));\r\n    // ops.mulseq(result, -1.0);\r\n    // ops.addseq(result, 1.0);\r\n\r\n    return result;\r\n}\r\n\r\nexport function NdarrayRgbaToMono(imageArray) {\r\n    var result = ndarray(\r\n        new Float32Array(imageArray.shape[0] * imageArray.shape[1]),\r\n        [imageArray.shape[0], imageArray.shape[1]]\r\n    );\r\n\r\n    ops.add(\r\n        result,\r\n        imageArray.pick(null, null, 0),\r\n        imageArray.pick(null, null, 1),\r\n        imageArray.pick(null, null, 2)\r\n    );\r\n\r\n    ops.divseq(result, 3.0);\r\n\r\n    return result;\r\n}\r\n\r\nexport function ndArrayToTensor(imageArray, N, C, H, W) {\r\n    const tensor = new Tensor(new Float32Array(N * C * H * W), \"float32\", [\r\n        N,\r\n        C,\r\n        W,\r\n        H,\r\n    ]);\r\n\r\n    tensor.data.set(imageArray.data);\r\n\r\n    return tensor;\r\n}\r\n\r\nexport function getTensorFromCanvasContext(ctx) {\r\n    // get the image data from canvas\r\n    const imageData = ctx.getImageData(\r\n        0,\r\n        0,\r\n        ctx.canvas.width,\r\n        ctx.canvas.height\r\n    );\r\n    // data is a array RGBA [R[0], G[0], B[0], A[0], R[1], G[1], B[1], A[1] . . .]\r\n    // basically pixel 0 RGBA is first 4 elements in the array\r\n    const { data, width, height } = imageData;\r\n    // an array with shape H * W * C\r\n    const dataTensor = ndarray(new Float32Array(data), [width, height, 4]);\r\n    // an array with shape N * C * H * W\r\n    const dataProcessedTensor = ndarray(new Float32Array(width * height * 3), [\r\n        1,\r\n        3,\r\n        width,\r\n        height,\r\n    ]);\r\n    ops.assign(\r\n        dataProcessedTensor.pick(0, 0, null, null),\r\n        dataTensor.pick(null, null, 2)\r\n    );\r\n    ops.assign(\r\n        dataProcessedTensor.pick(0, 1, null, null),\r\n        dataTensor.pick(null, null, 1)\r\n    );\r\n    ops.assign(\r\n        dataProcessedTensor.pick(0, 2, null, null),\r\n        dataTensor.pick(null, null, 0)\r\n    );\r\n    ops.divseq(dataProcessedTensor, 255);\r\n    // perform normalization with mean and std\r\n    // ops.subseq(dataProcessedTensor.pick(0, 0, null, null), 0.485);\r\n    // ops.subseq(dataProcessedTensor.pick(0, 1, null, null), 0.456);\r\n    // ops.subseq(dataProcessedTensor.pick(0, 2, null, null), 0.406);\r\n    // ops.divseq(dataProcessedTensor.pick(0, 0, null, null), 0.229);\r\n    // ops.divseq(dataProcessedTensor.pick(0, 1, null, null), 0.224);\r\n    // ops.divseq(dataProcessedTensor.pick(0, 2, null, null), 0.225);\r\n    const tensor = new Tensor(new Float32Array(3 * width * height), \"float32\", [\r\n        1,\r\n        3,\r\n        width,\r\n        height,\r\n    ]);\r\n    tensor.data.set(dataProcessedTensor.data);\r\n    return tensor;\r\n}\r\n\r\nexport function setCanvasFromMonoTensor(tensor, canvas) {\r\n    // console.log(tensor);\r\n    // return;\r\n    const height = tensor.dims[2];\r\n    const width = tensor.dims[3];\r\n    var t_data = tensor.data;\r\n\r\n    let t_index = 0;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    var contextImageData = ctx.createImageData(width, height);\r\n    var contextData = contextImageData.data;\r\n    // console.log(contextImageData);\r\n\r\n    // let colors = colormap({\r\n    //     colormap: \"bone\",\r\n    //     nshades: 255,\r\n    //     format: \"rba\",\r\n    //     alpha: 1,\r\n    // });\r\n\r\n    let index = 0;\r\n    for (var y = 0; y < height; y++) {\r\n        for (var x = 0; x < width; x++) {\r\n            const d = t_data[t_index++];\r\n            // const colorIndex = Math.round(d * 255.0);\r\n\r\n            // const colorMapValue = colors[colorIndex];\r\n\r\n            // const r = colorMapValue[0];\r\n            // const g = colorMapValue[1];\r\n            // const b = colorMapValue[2];\r\n            // const a = colorMapValue[3];\r\n\r\n            // contextData[index++] = r;\r\n            // contextData[index++] = g;\r\n            // contextData[index++] = b;\r\n            // contextData[index++] = a;\r\n\r\n            contextData[index++] = 0;\r\n            contextData[index++] = 0;\r\n            contextData[index++] = 0;\r\n            contextData[index++] = Math.round(d * 255.0);\r\n        }\r\n    }\r\n\r\n    ctx.putImageData(contextImageData, 0, 0);\r\n    ctx.drawImage(canvas, 0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nexport function setContextFromTensor(tensor, ctx) {\r\n    const height = tensor.dims[2];\r\n    const width = tensor.dims[3];\r\n    var t_data = tensor.data;\r\n\r\n    let red = 0;\r\n    let green = red + height * width;\r\n    let blue = green + height * width;\r\n\r\n    var contextImageData = ctx.getImageData(0, 0, width, height);\r\n    var contextData = contextImageData.data;\r\n\r\n    let index = 0;\r\n    for (var y = 0; y < height; y++) {\r\n        for (var x = 0; x < width; x++) {\r\n            const r = t_data[red++];\r\n            const g = t_data[green++];\r\n            const b = t_data[blue++];\r\n\r\n            contextData[index++] = r;\r\n            contextData[index++] = g;\r\n            contextData[index++] = b;\r\n            contextData[index++] = 0xff;\r\n        }\r\n    }\r\n\r\n    ctx.putImageData(contextImageData, 0, 0);\r\n}\r\n\r\nexport function canvasToTensor(canvasId) {\r\n    var ctx = document.getElementById(canvasId).getContext(\"2d\");\r\n\r\n    const n = 1;\r\n    const c = 3;\r\n    const h = ctx.canvas.height;\r\n    const w = ctx.canvas.width;\r\n\r\n    // float array of our data in form of NCHW\r\n    const out_data = new Float32Array(n * c * h * w);\r\n\r\n    // load src context to a tensor\r\n    var srcImgData = ctx.getImageData(0, 0, w, h);\r\n    var src_data = srcImgData.data;\r\n\r\n    var src_idx = 0;\r\n    // [R[0], G[0], B[0], A[0], R[1], G[1] . . .] is how they pixels are arranged\r\n    var out_idx_r = 0;\r\n    var out_idx_g = out_idx_r + h * w;\r\n    var out_idx_b = out_idx_g + h * w;\r\n\r\n    // dont perform normalization here, do it if you want to later\r\n    const norm = 1.0;\r\n    for (var y = 0; y < h; y++) {\r\n        for (var x = 0; x < w; x++) {\r\n            let src_r = src_data[src_idx++];\r\n            let src_g = src_data[src_idx++];\r\n            let src_b = src_data[src_idx++];\r\n            // skip the alpha part\r\n            src_idx++;\r\n\r\n            out_data[out_idx_r++] = src_r / norm;\r\n            out_data[out_idx_g++] = src_g / norm;\r\n            out_data[out_idx_b++] = src_b / norm;\r\n        }\r\n    }\r\n\r\n    const out = new Tensor(out_data, \"float32\", [n, c, h, w]);\r\n\r\n    return out;\r\n}\r\n\r\nexport function tensorToCanvas(tensor, canvasId) {\r\n    const h = tensor.dims[2];\r\n    const w = tensor.dims[3];\r\n    var t_data = tensor.data;\r\n\r\n    let t_idx_r = 0;\r\n    let t_idx_g = t_idx_r + h * w;\r\n    let t_idx_b = t_idx_g + h * w;\r\n\r\n    var dst_ctx = document.getElementById(canvasId).getContext(\"2d\");\r\n    var dst_ctx_imgData = dst_ctx.getImageData(0, 0, w, h);\r\n    var dst_ctx_data = dst_ctx_imgData.data;\r\n\r\n    let dst_idx = 0;\r\n    for (var y = 0; y < h; y++) {\r\n        for (var x = 0; x < w; x++) {\r\n            let r = t_data[t_idx_r++];\r\n            let g = t_data[t_idx_g++];\r\n            let b = t_data[t_idx_b++];\r\n\r\n            dst_ctx_data[dst_idx++] = r;\r\n            dst_ctx_data[dst_idx++] = g;\r\n            dst_ctx_data[dst_idx++] = b;\r\n            dst_ctx_data[dst_idx++] = 0xff;\r\n        }\r\n    }\r\n\r\n    dst_ctx.putImageData(dst_ctx_imgData, 0, 0);\r\n}\r\n\r\nexport function resampleCanvasImage(canvas, width, height) {\r\n    var width_source = canvas.width;\r\n    var height_source = canvas.height;\r\n    width = Math.round(width);\r\n    height = Math.round(height);\r\n\r\n    var ratio_w = width_source / width;\r\n    var ratio_h = height_source / height;\r\n    var ratio_w_half = Math.ceil(ratio_w / 2);\r\n    var ratio_h_half = Math.ceil(ratio_h / 2);\r\n\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var img = ctx.getImageData(0, 0, width_source, height_source);\r\n    var img2 = ctx.createImageData(width, height);\r\n    var data = img.data;\r\n    var data2 = img2.data;\r\n\r\n    for (var j = 0; j < height; j++) {\r\n        for (var i = 0; i < width; i++) {\r\n            var x2 = (i + j * width) * 4;\r\n            var weight = 0;\r\n            var weights = 0;\r\n            var weights_alpha = 0;\r\n            var gx_r = 0;\r\n            var gx_g = 0;\r\n            var gx_b = 0;\r\n            var gx_a = 0;\r\n            var center_y = (j + 0.5) * ratio_h;\r\n            var yy_start = Math.floor(j * ratio_h);\r\n            var yy_stop = Math.ceil((j + 1) * ratio_h);\r\n            for (var yy = yy_start; yy < yy_stop; yy++) {\r\n                var dy = Math.abs(center_y - (yy + 0.5)) / ratio_h_half;\r\n                var center_x = (i + 0.5) * ratio_w;\r\n                var w0 = dy * dy; //pre-calc part of w\r\n                var xx_start = Math.floor(i * ratio_w);\r\n                var xx_stop = Math.ceil((i + 1) * ratio_w);\r\n                for (var xx = xx_start; xx < xx_stop; xx++) {\r\n                    var dx = Math.abs(center_x - (xx + 0.5)) / ratio_w_half;\r\n                    var w = Math.sqrt(w0 + dx * dx);\r\n                    if (w >= 1) {\r\n                        //pixel too far\r\n                        continue;\r\n                    }\r\n                    //hermite filter\r\n                    weight = 2 * w * w * w - 3 * w * w + 1;\r\n                    var pos_x = 4 * (xx + yy * width_source);\r\n                    //alpha\r\n                    gx_a += weight * data[pos_x + 3];\r\n                    weights_alpha += weight;\r\n                    //colors\r\n                    if (data[pos_x + 3] < 255)\r\n                        weight = (weight * data[pos_x + 3]) / 250;\r\n                    gx_r += weight * data[pos_x];\r\n                    gx_g += weight * data[pos_x + 1];\r\n                    gx_b += weight * data[pos_x + 2];\r\n                    weights += weight;\r\n                }\r\n            }\r\n            data2[x2] = gx_r / weights;\r\n            data2[x2 + 1] = gx_g / weights;\r\n            data2[x2 + 2] = gx_b / weights;\r\n            data2[x2 + 3] = gx_a / weights_alpha;\r\n        }\r\n    }\r\n\r\n    return img2;\r\n}\r\n","export default __webpack_public_path__ + \"media/mnist_vae_encoder_32x32.baf8309a.onnx\";","import React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Spinner,\r\n    ButtonGroup,\r\n    ToggleButton,\r\n} from \"react-bootstrap\";\r\nimport { Tensor, InferenceSession, backend } from \"onnxjs\";\r\nimport {\r\n    canvasGetScaled,\r\n    canvasToTensor,\r\n    warmupModel,\r\n    resampleCanvasImage,\r\n    imageDataRgbaToNdarray,\r\n    NdarrayRgbaToMono,\r\n    NdarrayAlphaToMono,\r\n    ndArrayToTensor,\r\n    setCanvasFromMonoTensor,\r\n} from \"../onnx/Utils\";\r\nimport ndarray from \"ndarray\";\r\nimport ops from \"ndarray-ops\";\r\nimport colormap from \"colormap\";\r\n\r\nimport encoderModel from \"./mnist_vae_encoder_32x32.onnx\";\r\nimport decoderModel from \"./mnist_vae_decoder_32x32_onnxjs.onnx\";\r\n\r\nconst Z_DIMS = 10;\r\n\r\nconst scale = (num, in_min, in_max, out_min, out_max) => {\r\n    return ((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\n\r\nconst componentToHex = (c) => {\r\n    var hex = c.toString(16);\r\n    return hex.length === 1 ? \"0\" + hex : hex;\r\n};\r\n\r\nconst rgbToHex = (r, g, b) => {\r\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n};\r\n\r\nconst getBgAndTextColor = (f) => {\r\n    const bg_scaled = Math.floor(scale(f, -1, 1, 0, 255));\r\n    let text_scaled = 255 - bg_scaled;\r\n\r\n    if (bg_scaled >= 80 && bg_scaled <= 180) {\r\n        text_scaled = 255;\r\n    }\r\n\r\n    return [\r\n        rgbToHex(bg_scaled, bg_scaled, bg_scaled),\r\n        rgbToHex(text_scaled, text_scaled, text_scaled),\r\n    ];\r\n};\r\n\r\nlet encoderInferenceSession;\r\nlet decoderInferenceSession;\r\n\r\nconst MnistVae = () => {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const canvasRef = useRef(null);\r\n    const dstCanvasRef = useRef(null);\r\n    const [dstContext, setDstContext] = useState(null);\r\n    const [context, setContext] = useState(null);\r\n    const [latentz, setLatentz] = useState(\r\n        Array.from(Array(Z_DIMS)).map((x) => Math.random() * 2.0 - 1.0)\r\n    );\r\n    const [currIdx, setCurrIdx] = useState(0);\r\n    const [dstImage, setDstImage] = useState(\"\");\r\n    const sliderChange = (event) => {\r\n        let newLatentZ = [...latentz];\r\n        newLatentZ[currIdx] = parseFloat(event.target.value);\r\n        setLatentz(newLatentZ);\r\n    };\r\n\r\n    const selectValue = (index) => {\r\n        setCurrIdx(index);\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadModel();\r\n    }, []);\r\n\r\n    const loadModel = async () => {\r\n        encoderInferenceSession = await new InferenceSession();\r\n        await encoderInferenceSession.loadModel(encoderModel);\r\n        await warmupModel(encoderInferenceSession, [1, 1, 32, 32]);\r\n\r\n        decoderInferenceSession = await new InferenceSession();\r\n        await decoderInferenceSession.loadModel(decoderModel);\r\n        await warmupModel(decoderInferenceSession, [1, 10, 1, 1]);\r\n\r\n        setIsReady(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // effect\r\n\r\n        if (dstCanvasRef.current) {\r\n            const renderCtx = dstCanvasRef.current.getContext(\"2d\");\r\n            if (renderCtx) {\r\n                // canvasOffsetLeft = canvasRef.current.offsetLeft;\r\n                // canvasOffsetTop = canvasRef.current.offsetTop;\r\n\r\n                // canvasRef.current.width = canvasRef.current.clientWidth;\r\n                // canvasRef.current.height = canvasRef.current.clientWidth;\r\n\r\n                setDstContext(renderCtx);\r\n\r\n                // console.log(canvasRef.current.getBoundingClientRect());\r\n            }\r\n        }\r\n        return () => {\r\n            // cleanup\r\n        };\r\n    }, [dstContext]);\r\n\r\n    useEffect(() => {\r\n        const updateCanvas = async () => {\r\n            var zTensor = new Tensor(new Float32Array(latentz), \"float32\", [\r\n                1,\r\n                10,\r\n                1,\r\n                1,\r\n            ]);\r\n\r\n            const outputDec = await decoderInferenceSession.run([zTensor]);\r\n\r\n            setCanvasFromMonoTensor(\r\n                outputDec.get(\"output\"),\r\n                dstCanvasRef.current\r\n            );\r\n        };\r\n        if (decoderInferenceSession) {\r\n            updateCanvas();\r\n        }\r\n\r\n        // effect\r\n        return () => {\r\n            // cleanup\r\n        };\r\n    }, [latentz]);\r\n\r\n    const clearCanvases = () => {\r\n        canvasRef.current\r\n            .getContext(\"2d\")\r\n            .clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        dstCanvasRef.current\r\n            .getContext(\"2d\")\r\n            .clearRect(\r\n                0,\r\n                0,\r\n                dstCanvasRef.current.width,\r\n                dstCanvasRef.current.height\r\n            );\r\n    };\r\n\r\n    useEffect(() => {\r\n        // effect\r\n        let mouseDown = false;\r\n        let start = { x: 0, y: 0 };\r\n        let end = { x: 0, y: 0 };\r\n        let canvasOffsetLeft = () => {\r\n            let rect = canvasRef.current.getBoundingClientRect();\r\n            return rect.left;\r\n        };\r\n        let canvasOffsetTop = () => {\r\n            let rect = canvasRef.current.getBoundingClientRect();\r\n            return rect.top;\r\n        };\r\n\r\n        const handleMouseDown = (evt) => {\r\n            mouseDown = true;\r\n\r\n            start = {\r\n                x: evt.clientX - canvasOffsetLeft(),\r\n                y: evt.clientY - canvasOffsetTop(),\r\n            };\r\n\r\n            end = {\r\n                x: evt.clientX - canvasOffsetLeft(),\r\n                y: evt.clientY - canvasOffsetTop(),\r\n            };\r\n        };\r\n\r\n        const reconstructDrawing = async () => {\r\n            const scaledImage = resampleCanvasImage(canvasRef.current, 32, 32);\r\n\r\n            const imageArray = imageDataRgbaToNdarray(scaledImage);\r\n\r\n            var monoImage = NdarrayAlphaToMono(imageArray);\r\n            ops.divseq(monoImage, 255.0);\r\n            var tensor = ndArrayToTensor(monoImage, 1, 1, 32, 32);\r\n\r\n            const output = await encoderInferenceSession.run([tensor]);\r\n\r\n            setLatentz(Array.from(output.get(\"output\").data));\r\n        };\r\n\r\n        const handleMouseUp = (evt) => {\r\n            mouseDown = false;\r\n            console.log(\"mouse is up\");\r\n\r\n            reconstructDrawing();\r\n        };\r\n\r\n        const handleMouseMove = (evt) => {\r\n            if (mouseDown && context) {\r\n                start = {\r\n                    x: end.x,\r\n                    y: end.y,\r\n                };\r\n\r\n                end = {\r\n                    x: evt.clientX - canvasOffsetLeft(),\r\n                    y: evt.clientY - canvasOffsetTop(),\r\n                };\r\n\r\n                // Draw our path\r\n                context.beginPath();\r\n                context.moveTo(start.x, start.y);\r\n                context.lineTo(end.x, end.y);\r\n                context.lineCap = \"round\";\r\n                context.strokeStyle = \"#000\";\r\n                // context.lineWidth = 20;\r\n                context.lineWidth = canvasRef.current.width * 0.1;\r\n                context.stroke();\r\n                context.closePath();\r\n            }\r\n        };\r\n\r\n        const handleTouchStart = (evt) => {\r\n            if (evt.target === canvasRef.current) {\r\n                evt.preventDefault();\r\n            }\r\n            var touch = evt.touches[0];\r\n            var mouseEvent = new MouseEvent(\"mousedown\", {\r\n                clientX: touch.clientX,\r\n                clientY: touch.clientY,\r\n            });\r\n            canvasRef.current.dispatchEvent(mouseEvent);\r\n        };\r\n\r\n        const handleTouchEnd = (evt) => {\r\n            if (evt.target === canvasRef.current) {\r\n                evt.preventDefault();\r\n            }\r\n            var mouseEvent = new MouseEvent(\"mouseup\", {});\r\n            canvasRef.current.dispatchEvent(mouseEvent);\r\n        };\r\n\r\n        const handleTouchMove = (evt) => {\r\n            if (evt.target === canvasRef.current) {\r\n                evt.preventDefault();\r\n            }\r\n            var touch = evt.touches[0];\r\n            var mouseEvent = new MouseEvent(\"mousemove\", {\r\n                clientX: touch.clientX,\r\n                clientY: touch.clientY,\r\n            });\r\n            canvasRef.current.dispatchEvent(mouseEvent);\r\n        };\r\n\r\n        if (canvasRef.current) {\r\n            const renderCtx = canvasRef.current.getContext(\"2d\");\r\n            if (renderCtx) {\r\n                canvasRef.current.addEventListener(\r\n                    \"mousedown\",\r\n                    handleMouseDown\r\n                );\r\n                canvasRef.current.addEventListener(\"mouseup\", handleMouseUp);\r\n                canvasRef.current.addEventListener(\r\n                    \"mousemove\",\r\n                    handleMouseMove\r\n                );\r\n                canvasRef.current.addEventListener(\r\n                    \"touchstart\",\r\n                    handleTouchStart\r\n                );\r\n                canvasRef.current.addEventListener(\"touchend\", handleTouchEnd);\r\n                canvasRef.current.addEventListener(\r\n                    \"touchmove\",\r\n                    handleTouchMove\r\n                );\r\n\r\n                // canvasOffsetLeft = canvasRef.current.offsetLeft;\r\n                // canvasOffsetTop = canvasRef.current.offsetTop;\r\n\r\n                canvasRef.current.width = canvasRef.current.clientWidth;\r\n                canvasRef.current.height = canvasRef.current.clientWidth;\r\n\r\n                setContext(renderCtx);\r\n\r\n                // console.log(canvasRef.current.getBoundingClientRect());\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            // cleanup\r\n\r\n            if (canvasRef.current) {\r\n                canvasRef.current.removeEventListener(\r\n                    \"mousedown\",\r\n                    handleMouseDown\r\n                );\r\n                canvasRef.current.removeEventListener(\"mouseup\", handleMouseUp);\r\n                canvasRef.current.removeEventListener(\r\n                    \"mousemove\",\r\n                    handleMouseMove\r\n                );\r\n\r\n                canvasRef.current.removeEventListener(\r\n                    \"touchstart\",\r\n                    handleTouchStart\r\n                );\r\n                canvasRef.current.removeEventListener(\r\n                    \"touchend\",\r\n                    handleTouchEnd\r\n                );\r\n                canvasRef.current.removeEventListener(\r\n                    \"touchmove\",\r\n                    handleTouchMove\r\n                );\r\n            }\r\n        };\r\n    }, [context]);\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row style={{ display: isReady ? \"none\" : \"block\" }}>\r\n                <Spinner animation=\"border\" role=\"status\" size=\"lg\" />\r\n                <h1>Loading Models ...</h1>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={10} md={6}>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h5>Draw a number</h5>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mb-4\">\r\n                        <canvas\r\n                            id=\"srcCanvas\"\r\n                            width={28}\r\n                            height={28}\r\n                            ref={canvasRef}\r\n                            style={{\r\n                                border: \"2px solid #000\",\r\n                                minWidth: \"80%\",\r\n                                height: \"auto\",\r\n                            }}\r\n                            data-paper-resize\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-around mb-2\">\r\n                        <Button variant=\"dark\" onClick={() => clearCanvases()}>\r\n                            Clear\r\n                        </Button>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mb-3\">\r\n                        <h5>Change LatentZ values</h5>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center px-5 mb-5\">\r\n                        <input\r\n                            type=\"range\"\r\n                            className=\"form-control-range\"\r\n                            min=\"-3\"\r\n                            max=\"3\"\r\n                            step=\"0.02\"\r\n                            onChange={sliderChange}\r\n                            value={latentz[currIdx]}\r\n                        />\r\n                    </Row>\r\n                    <Row xs={5}>\r\n                        {latentz.map((val, idx) => (\r\n                            <ButtonGroup toggle key={idx}>\r\n                                <ToggleButton\r\n                                    key={idx}\r\n                                    type=\"checkbox\"\r\n                                    variant=\"outline-dark\"\r\n                                    onClick={() => selectValue(idx)}\r\n                                    as={Col}\r\n                                    value=\"1\"\r\n                                    className=\"p-1 m-2\"\r\n                                    style={{\r\n                                        backgroundColor: getBgAndTextColor(\r\n                                            val\r\n                                        )[0],\r\n                                        color: getBgAndTextColor(val)[1],\r\n                                    }}\r\n                                >\r\n                                    {val.toFixed(2)}\r\n                                </ToggleButton>\r\n                            </ButtonGroup>\r\n                        ))}\r\n                    </Row>\r\n                </Col>\r\n                <Col sm={10} md={6} className=\"\">\r\n                    <Row className=\"justify-content-center\">\r\n                        <h5>Reconstructed Number</h5>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mb-4\">\r\n                        <canvas\r\n                            id=\"dstCanvas\"\r\n                            width={32}\r\n                            height={32}\r\n                            ref={dstCanvasRef}\r\n                            style={{\r\n                                border: \"2px solid #000\",\r\n                                minWidth: \"80%\",\r\n                                height: \"auto\",\r\n                            }}\r\n                            data-paper-resize\r\n                        />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MnistVae;\r\n","export default __webpack_public_path__ + \"media/mnist_vae_decoder_32x32_onnxjs.08faf3e8.onnx\";","import React, { useState } from \"react\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\nimport { STYLE_TRANSFER_ENDPOINT } from \"../constants/APIEndpoints\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Alert,\r\n    Form,\r\n    Image,\r\n    Button,\r\n    ProgressBar,\r\n    Spinner,\r\n    Toast,\r\n} from \"react-bootstrap\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst StyleResult = ({ result, fileName, styleName }) => {\r\n    return (\r\n        <Col>\r\n            <Row className=\"justify-content-center\">\r\n                <Image src={result} style={{ width: \"85%\" }} rounded fluid />\r\n            </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Button\r\n                    variant=\"dark\"\r\n                    className=\"shadow-lg mt-5\"\r\n                    size=\"md\"\r\n                    href={result}\r\n                    download={`${fileName}-${styleName}.jpg`}\r\n                >\r\n                    Download\r\n                </Button>\r\n            </Row>\r\n        </Col>\r\n    );\r\n};\r\n\r\nconst StyleTransfer = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [styleType, setStyleType] = useState(\"candy\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n    const [result, setResult] = useState(undefined);\r\n\r\n    const onFileSelect = (e) => {\r\n        if (e.target.files.length === 1) {\r\n            setSelectedFile(e.target.files[0]);\r\n        } else {\r\n            setSelectedFile(null);\r\n        }\r\n    };\r\n\r\n    const stylizeImage = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setResult(undefined);\r\n            setShowLoading(true);\r\n            console.log(selectedFile);\r\n            const formData = new FormData();\r\n            formData.append(\"file\", selectedFile);\r\n\r\n            // send a POST request to the style-transfer api endpoint\r\n            const result = await axios.post(\r\n                `${STYLE_TRANSFER_ENDPOINT}/fast-style-transfer/${styleType}`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                        progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n\r\n            // console.log(result);\r\n            setResult(result.data);\r\n        } catch (e) {\r\n            if (e.reponse !== undefined) {\r\n                console.log(e.response);\r\n                setMessage(JSON.stringify(e.response));\r\n            } else {\r\n                console.log(e);\r\n                setMessage(JSON.stringify(e));\r\n            }\r\n        }\r\n        setShowLoading(false);\r\n        setTimeout(() => {\r\n            setUploadPercentage(0);\r\n        }, 5000);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row>\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading>\r\n                            Fast Neural Style Transfer\r\n                        </Alert.Heading>\r\n                        <p>\r\n                            This is a the feed forward version of the neural\r\n                            style transfer, which basically applied a art style\r\n                            on the given imagwe, and make it look more\r\n                            \"artisty\". There are fixed types of styles i.e.\r\n                        </p>\r\n                        <ul>\r\n                            <li>candy</li>\r\n                            <li>mosaic</li>\r\n                            <li>rain_princess</li>\r\n                            <li>udnie</li>\r\n                        </ul>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://satyajitghana.github.io/TSAI-DeepVision-EVA4.0-Phase-2/08-SuperResolution_StyleTransfer/\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                See Style Examples\r\n                            </a>\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Form>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={6} md={6} sm={10}>\r\n                        <Form.Group as={Row} className=\"justify-content-center\">\r\n                            <Form.Label>\r\n                                <h5>Select an Image</h5>\r\n                            </Form.Label>\r\n                            <Form.File custom className=\"mx-2\">\r\n                                <Form.File.Input\r\n                                    onChange={onFileSelect}\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {selectedFile\r\n                                        ? selectedFile.name\r\n                                        : \"Please select an Image\"}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col className=\"my-4\">\r\n                                <ProgressBar\r\n                                    striped\r\n                                    variant=\"dark\"\r\n                                    now={uploadPercentage}\r\n                                    label={`${uploadPercentage}%`}\r\n                                    hidden={!showLoading}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\">\r\n                            {selectedFile && (\r\n                                <Image\r\n                                    src={URL.createObjectURL(selectedFile)}\r\n                                    style={{ width: \"85%\" }}\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            )}\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col lg={6} md={6} sm={10}>\r\n                        <Form.Group as={Row} className=\"justify-content-center\">\r\n                            <Form.Label>\r\n                                <h5>Select a Style</h5>\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={(e) => setStyleType(e.target.value)}\r\n                                value={styleType}\r\n                                className=\"mx-2\"\r\n                            >\r\n                                <option value=\"candy\">Candy</option>\r\n                                <option value=\"mosaic\">Mosaic</option>\r\n                                <option value=\"rain_princess\">\r\n                                    Rain Princess\r\n                                </option>\r\n                                <option value=\"udnie\">Udnie</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Row className=\"justify-content-center\">\r\n                            <Button\r\n                                variant=\"dark\"\r\n                                className=\"shadow-lg mt-1\"\r\n                                size=\"md\"\r\n                                disabled={selectedFile === null}\r\n                                onClick={() => stylizeImage()}\r\n                            >\r\n                                {showLoading ? (\r\n                                    <>\r\n                                        <Spinner\r\n                                            variant=\"light\"\r\n                                            as=\"span\"\r\n                                            animation=\"border\"\r\n                                            size=\"md\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                        />{\" \"}\r\n                                        Styling...\r\n                                    </>\r\n                                ) : (\r\n                                    \"StyleIt !\"\r\n                                )}\r\n                            </Button>\r\n                        </Row>\r\n                        <Row className=\"mt-2\">\r\n                            {result !== undefined && (\r\n                                <StyleResult\r\n                                    result={result}\r\n                                    fileName={selectedFile.name}\r\n                                    styleName={styleType}\r\n                                />\r\n                            )}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n            <Toast\r\n                onClose={() => setMessage(\"\")}\r\n                show={message !== \"\"}\r\n                className=\"mx-auto m-3 bg-dark text-white shadow-lg justify-content-center\"\r\n                as={Row}\r\n            >\r\n                <Toast.Header>\r\n                    <strong className=\"mr-auto\">Message</strong>\r\n                    <small>just now</small>\r\n                </Toast.Header>\r\n                <Toast.Body>{message}</Toast.Body>\r\n            </Toast>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default StyleTransfer;\r\n","import React, { useState } from 'react'\r\nimport { Alert, Button, Card, Col, Form, Image, ProgressBar, Row, Spinner, Toast } from 'react-bootstrap'\r\nimport FadeInContainer from './animated/FadeInContainer'\r\n\r\nimport { IMAGE_CAPTION_ENDPOINT } from '../constants/APIEndpoints'\r\n\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst ImageCaptioning = () => {\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [message, setMessage] = useState(\"boooooo :p\");\r\n    const [showLoading, setShowLoading] = useState(false);\r\n    const [uploadPercentage, setUploadPercentage] = useState(0);\r\n    const [result, setResult] = useState(undefined);\r\n\r\n\r\n    const onFileSelect = (e) => {\r\n        if (e.target.files.length === 1) {\r\n            setSelectedFile(e.target.files[0]);\r\n        } else {\r\n            setSelectedFile(null);\r\n        }\r\n\r\n        setResult(undefined);\r\n    };\r\n\r\n    const captionImage = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setResult(undefined);\r\n            setShowLoading(true);\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"file\", selectedFile);\r\n\r\n            const result = await axios.post(\r\n                `${IMAGE_CAPTION_ENDPOINT}/flickr8k-image-caption`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                    onUploadProgress: (progressEvent) => {\r\n                        setUploadPercentage(\r\n                            parseInt(\r\n                                Math.round(\r\n                                    (progressEvent.loaded * 100) /\r\n                                    progressEvent.total\r\n                                )\r\n                            )\r\n                        );\r\n                    },\r\n                }\r\n            )\r\n            setResult(result.data['caption'])\r\n        } catch (e) {\r\n            if (e.reponse !== undefined) {\r\n                console.log(e.response);\r\n                setMessage(JSON.stringify(e.response));\r\n            } else {\r\n                console.log(e);\r\n                setMessage(JSON.stringify(e));\r\n            }\r\n        }\r\n\r\n        setShowLoading(false);\r\n        setTimeout(() => {\r\n            setUploadPercentage(0);\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row>\r\n\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading>\r\n                            Image Captioning\r\n                        </Alert.Heading>\r\n                        <p>\r\n                            This is a pretty simple and straight forward image captioning, you upload an image, and i tell you what's in the image ! lets's play  !\r\n                        </p>\r\n                        <p>\r\n                            <a\r\n                                href=\"https://github.com/satyajitghana/TSAI-DeepVision-EVA4.0-Phase-2/tree/master/12-ImageCaptioning/flickrdataset/Flickr8k_Dataset/Flicker8k_Dataset\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                See Sample Images\r\n                            </a>\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Form>\r\n                <Row className=\"mt-4\">\r\n                    <Col lg={6} md={6} sm={10}>\r\n                        <Form.Group as={Row} className=\"justify-content-center\">\r\n                            <Form.Label>\r\n                                <h5>Select an Image</h5>\r\n                            </Form.Label>\r\n                            <Form.File custom className=\"mx-2\">\r\n                                <Form.File.Input\r\n                                    onChange={onFileSelect}\r\n                                    accept=\".jpg,.png,.jpeg\"\r\n                                />\r\n                                <Form.File.Label data-browse=\"Browse\">\r\n                                    {selectedFile\r\n                                        ? selectedFile.name\r\n                                        : \"Please select an Image\"}\r\n                                </Form.File.Label>\r\n                            </Form.File>\r\n                        </Form.Group>\r\n\r\n                        <Row className=\"justify-content-center\">\r\n                            <Button\r\n                                variant=\"dark\"\r\n                                className=\"shadow-lg mt-5\"\r\n                                size=\"md\"\r\n                                disabled={selectedFile === null}\r\n                                onClick={() => captionImage()}\r\n                            >\r\n                                {showLoading ? (\r\n                                    <>\r\n                                        <Spinner\r\n                                            variant=\"light\"\r\n                                            as=\"span\"\r\n                                            animation=\"border\"\r\n                                            size=\"md\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                        />{\" \"}\r\n                                        Captioning...\r\n                                    </>\r\n                                ) : (\r\n                                        \"CaptionIt !\"\r\n                                    )}\r\n                            </Button>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col className=\"my-4\">\r\n                                <ProgressBar\r\n                                    striped\r\n                                    variant=\"dark\"\r\n                                    now={uploadPercentage}\r\n                                    label={`${uploadPercentage}%`}\r\n                                    hidden={!showLoading}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col lg={6} md={6} sm={10}>\r\n\r\n                        <Row className=\"justify-content-center\">\r\n                            {selectedFile && (\r\n                                <Image\r\n                                    src={URL.createObjectURL(selectedFile)}\r\n                                    style={{ maxWidth: \"85%\", maxHeight: \"50vh\" }}\r\n                                    rounded\r\n                                    fluid\r\n                                />\r\n                            )}\r\n                        </Row>\r\n\r\n                        <Card className=\"m-4\">\r\n                            <Card.Header className=\"text-center\">\r\n                                Caption\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n\r\n                                {result === undefined ? \"<EMPTY INPUT>\" : result}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n            <Toast\r\n                onClose={() => setMessage(\"\")}\r\n                show={message !== \"\"}\r\n                className=\"mx-auto m-3 bg-dark text-white shadow-lg justify-content-center\"\r\n                as={Row}\r\n            >\r\n                <Toast.Header>\r\n                    <strong className=\"mr-auto\">Message</strong>\r\n                    <small>just now</small>\r\n                </Toast.Header>\r\n                <Toast.Body>{message} </Toast.Body>\r\n            </Toast>\r\n        </FadeInContainer>\r\n    )\r\n}\r\n\r\nexport default ImageCaptioning\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Alert, Button, Card, Col, Form, Row, Spinner, Toast } from 'react-bootstrap'\r\nimport { useReactMediaRecorder } from 'react-media-recorder';\r\nimport styled, { css } from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport FadeInContainer from './animated/FadeInContainer'\r\n\r\nimport { SPEECH_TO_TEXT } from '../constants/APIEndpoints'\r\n\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst sample_audios = [\r\n    \"happy.wav\",\r\n    \"bird.wav\",\r\n    \"dog.wav\",\r\n    \"marvin.wav\",\r\n    \"house.wav\",\r\n    \"on.wav\",\r\n    \"sheila.wav\",\r\n    \"right.wav\",\r\n    \"tree.wav\",\r\n    \"stop.wav\"\r\n]\r\n\r\nconst RecordButtonStyle = styled(Button)`\r\n        padding: 0;\r\n        height: 70px;\r\n        width: 70px;\r\n        border-radius: 50%;\r\n        border: none;\r\n        ${props => props.isRecording ? css`\r\n            background-color: #c0392b;\r\n            &:hover, &:focus {\r\n                background-color: #e74c3c;\r\n            }\r\n        ` : css`\r\n            background-color: #2980b9;\r\n            &:hover, &:focus {\r\n                background-color: #3498db;\r\n            }\r\n        `}\r\n    `;\r\n\r\nconst RecordButton = ({ status, startRecording, stopRecording, resetWatch, setIsRecording }) => {\r\n    // status: \"idle\" | \"acquiring_media\" | \"delayed_start\" | \"recording\" | \"stopping\" | \"stopped\";\r\n\r\n    if (status === 'idle' || status === 'stopped') {\r\n        return (<RecordButtonStyle className=\"mt-3\" onClick={() => {\r\n            // to unfocus the element\r\n            document.activeElement.blur();\r\n\r\n            // start recording\r\n            startRecording();\r\n            resetWatch();\r\n            setIsRecording(true);\r\n        }}><i class=\"fas fa-microphone-alt fa-2x\" /></RecordButtonStyle>)\r\n    } else {\r\n        return (<RecordButtonStyle isRecording className=\"mt-3\" onClick={() => {\r\n            document.activeElement.blur();\r\n            stopRecording();\r\n            setIsRecording(false);\r\n        }}><i class=\"fas fa-microphone-alt fa-2x\" /></RecordButtonStyle>)\r\n    }\r\n}\r\n\r\nconst SpeechToText = () => {\r\n    const {\r\n        status,\r\n        startRecording,\r\n        stopRecording,\r\n        mediaBlobUrl,\r\n    } = useReactMediaRecorder({\r\n        video: false,\r\n        audio: true,\r\n        blobPropertyBag: {\r\n            type: \"audio/wav\"\r\n        }\r\n    });\r\n\r\n    const [elapsedTime, setElapsedTime] = useState(0);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [result, setResult] = useState(\"\");\r\n    const [selectedSample, setSelectedSample] = useState(\"NONE\");\r\n    const [recordedAudio, setRecordedAudio] = useState(null);\r\n\r\n    const setAudioFileFromSample = async (filename) => {\r\n        let res = await fetch(\r\n            process.env.PUBLIC_URL + `/sample_audio/${filename}`\r\n        );\r\n\r\n        let data = await res.blob();\r\n\r\n        let blobUrl = URL.createObjectURL(data);\r\n\r\n        console.log(blobUrl);\r\n\r\n        setRecordedAudio(blobUrl);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAudioFileFromSample(sample_audios[0]);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // effect\r\n        console.log(mediaBlobUrl);\r\n        setRecordedAudio(mediaBlobUrl);\r\n    }, [mediaBlobUrl])\r\n\r\n    const speechToText = async () => {\r\n        try {\r\n            setMessage(\"\");\r\n            setResult(\"\")\r\n            setLoading(true);\r\n\r\n            const audioBlob = await fetch(recordedAudio).then(r => r.blob());\r\n\r\n            // console.log(audioBlob);\r\n\r\n            const ext = audioBlob.type.split(\"/\")[1];\r\n\r\n            const audiofile = new File([audioBlob], `${uuidv4()}.${\"wav\"}`, { type: \"audio/wav\" })\r\n\r\n            console.log(audiofile);\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"file\", audiofile);\r\n\r\n            const result = await axios.post(\r\n                `${SPEECH_TO_TEXT}/speech-recognition-residual-model`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                }\r\n            )\r\n\r\n            console.log(result)\r\n            // console.log(result.data['text'])\r\n            setResult(result.data['text'])\r\n\r\n        } catch (e) {\r\n            if (e.reponse !== undefined) {\r\n                console.log(e.response);\r\n                setMessage(JSON.stringify(e.response));\r\n            } else if (e.message !== undefined) {\r\n                console.log(e);\r\n                setMessage(JSON.stringify(e.message));\r\n            } else {\r\n                console.log(e);\r\n                setMessage(JSON.stringify(e));\r\n            }\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const resetWatch = () => {\r\n        setElapsedTime(0);\r\n        setIsRecording(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (isRecording) {\r\n            interval = setInterval(() => {\r\n                setElapsedTime(elapsedTime => elapsedTime + 1);\r\n            }, 1000);\r\n        } else if (!isRecording && elapsedTime !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        // effect\r\n        return () => {\r\n            // cleanup\r\n            clearInterval(interval);\r\n        }\r\n    }, [isRecording, elapsedTime])\r\n\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row className=\"mb-4\">\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading className=\"text-center\">\r\n                            Speech To Text\r\n                        </Alert.Heading>\r\n                        <p>\r\n                            Record your audio speaking a word, and let my model predict what you spoke !\r\n                            (Pls record single words only 😅)\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Row className=\"justify-content-center\">\r\n                        <h4>Record Your Audio</h4>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col className=\"text-center\">\r\n                            <div className=\"h1\">{elapsedTime}s</div>\r\n                            <RecordButton status={status} startRecording={startRecording} stopRecording={stopRecording} resetWatch={resetWatch} setIsRecording={setIsRecording} />\r\n                            <div className=\"mt-1\"><h4>{status}</h4></div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group as={Row} className=\"justify-content-center\">\r\n                        <Form.Label>\r\n                            <h5>or Select a Sample</h5>\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            onClick={(e) => {\r\n                                // console.log(e.target.value);\r\n                            }}\r\n                            onChange={(e) => {\r\n                                const filename = e.target.value;\r\n                                setSelectedSample(filename);\r\n                                setAudioFileFromSample(filename);\r\n                            }}\r\n                            value={selectedSample}\r\n                        >\r\n                            {\r\n                                sample_audios.map((val, idx) => (\r\n                                    <option key={idx} value={val}>{val}</option>\r\n                                ))\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col className=\"text-center\">\r\n                    <div>\r\n                        <h4>Test Your Audio</h4>\r\n                    </div>\r\n                    <div>\r\n                        <audio src={recordedAudio} controls autoplay />\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Button\r\n                            variant=\"dark\"\r\n                            className=\"shadow-lg m-2 mb-4\"\r\n                            size=\"lg\"\r\n                            disabled={loading || isRecording || recordedAudio === null}\r\n                            onClick={() => {\r\n                                // translateText(\"de\", \"en\");\r\n                                speechToText();\r\n                            }}\r\n                        >\r\n                            {loading ? (\r\n                                <>\r\n                                    <Spinner\r\n                                        variant=\"light\"\r\n                                        as=\"span\"\r\n                                        animation=\"border\"\r\n                                        size=\"md\"\r\n                                        role=\"status\"\r\n                                        aria-hidden=\"true\"\r\n                                    />{\" \"}\r\n                                        Running...\r\n                                    </>\r\n                            ) : (\r\n                                    \"Guess Me!\"\r\n                                )}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                        <h4>Prediction</h4>\r\n                    </div>\r\n                    <div>\r\n                        <Card className=\"m-4\">\r\n                            <Card.Body>\r\n\r\n                                {result === \"\" ? \"<EMPTY>\" : result}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Toast\r\n                onClose={() => setMessage(\"\")}\r\n                show={message !== \"\"}\r\n                className=\"mx-auto m-3 bg-dark text-white shadow-lg justify-content-center\"\r\n                as={Row}\r\n            >\r\n                <Toast.Header>\r\n                    <strong className=\"mr-auto\">Message</strong>\r\n                    <small>just now</small>\r\n                </Toast.Header>\r\n                <Toast.Body>{message}</Toast.Body>\r\n            </Toast>\r\n        </FadeInContainer>\r\n    )\r\n}\r\n\r\nexport default SpeechToText\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.pathname !== prevProps.location.pathname) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"./Loader\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\nconst StyledContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n    const devMode = false;\r\n\r\n    const [isLoading, setIsLoading] = useState(!devMode);\r\n    return isLoading ? (\r\n        <Loader\r\n            onFinishLoad={() => {\r\n                setIsLoading(false);\r\n            }}\r\n        />\r\n    ) : (\r\n            <StyledContent>\r\n                <main>\r\n                    <FadeInContainer>{children}</FadeInContainer>\r\n                </main>\r\n            </StyledContent>\r\n        );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Button, Col, Form, Row, Spinner, Toast } from \"react-bootstrap\";\r\nimport FadeInContainer from \"./animated/FadeInContainer\";\r\n\r\nimport { TRANSLATOR_ENDPOINT } from \"../constants/APIEndpoints\";\r\n\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst Translator = () => {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [result, setResult] = useState(\"\");\r\n\r\n    const translateText = async (source_ln, target_ln) => {\r\n        try {\r\n            setLoading(true);\r\n            setMessage(\"\");\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"source_text\", inputText);\r\n\r\n            const result = await axios.post(\r\n                `${TRANSLATOR_ENDPOINT}/${source_ln}/${target_ln}`,\r\n                formData,\r\n                {\r\n                    crossDomain: true,\r\n                }\r\n            );\r\n\r\n            // console.log(result);\r\n\r\n            setResult(result.data);\r\n        } catch (e) {\r\n            if (e.reponse !== undefined) {\r\n                console.log(e.response);\r\n                setMessage(JSON.stringify(e.response));\r\n            } else {\r\n                console.log(e);\r\n                setMessage(JSON.stringify(e));\r\n            }\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n        // simulate a result\r\n        // setTimeout(() => {\r\n        //     setResult(\"Hey there\");\r\n        //     setLoading(false);\r\n        // }, 1000);\r\n    };\r\n\r\n    return (\r\n        <FadeInContainer>\r\n            <Row className=\"mb-4\">\r\n                <Col>\r\n                    <Alert variant=\"warning\">\r\n                        <Alert.Heading className=\"text-center\">\r\n                            Translator\r\n                        </Alert.Heading>\r\n                        <p>\r\n                            TTC Translator is still in basic alpha, and supports\r\n                            only German to English Translation\r\n                        </p>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <Form>\r\n                <Row>\r\n                    <Col className=\"mx-1\" lg={true}>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label>Give a German Text</Form.Label>\r\n                            <Form.Control\r\n                                size=\"md\"\r\n                                type=\"text\"\r\n                                as=\"textarea\"\r\n                                placeholder=\"Geben Sie einen deutschen Text ein\"\r\n                                onChange={(e) => {\r\n                                    setInputText(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                Wir werden Ihre sensiblen Daten niemals\r\n                                speichern.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Button\r\n                                variant=\"dark\"\r\n                                className=\"shadow-lg m-2 mb-4\"\r\n                                size=\"lg\"\r\n                                disabled={inputText.length === 0 || loading}\r\n                                onClick={() => {\r\n                                    translateText(\"de\", \"en\");\r\n                                }}\r\n                            >\r\n                                {loading ? (\r\n                                    <>\r\n                                        <Spinner\r\n                                            variant=\"light\"\r\n                                            as=\"span\"\r\n                                            animation=\"border\"\r\n                                            size=\"md\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                        />{\" \"}\r\n                                        Translating...\r\n                                    </>\r\n                                ) : (\r\n                                        \"Übersetzen!\"\r\n                                    )}\r\n                            </Button>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className=\"mx-1\" lg={true}>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label>English Translation</Form.Label>\r\n                            <Form.Control\r\n                                size=\"md\"\r\n                                type=\"text\"\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter a German text\"\r\n                                value={result}\r\n                            />\r\n\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never save your sensitive data.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Toast\r\n                    onClose={() => setMessage(\"\")}\r\n                    show={message !== \"\"}\r\n                    className=\"mx-auto m-3 bg-dark text-white shadow-lg justify-content-center\"\r\n                    as={Row}\r\n                >\r\n                    <Toast.Header>\r\n                        <strong className=\"mr-auto\">Message</strong>\r\n                        <small>just now</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{message}</Toast.Body>\r\n                </Toast>\r\n            </Form>\r\n        </FadeInContainer>\r\n    );\r\n};\r\n\r\nexport default Translator;\r\n","import React, { Fragment, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Container, Alert } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport {\n    GlobalStyles,\n    Header,\n    Home,\n    Footer,\n    Classifiers,\n    FaceSwap,\n    IndianFaceRecognizer,\n    LFWPlusRecognizer,\n    HumanPoseEstimation,\n    RedCarGAN,\n    RedCarVAE,\n    IFOSR,\n    TextClassifier,\n    MnistVae,\n    StyleTransfer,\n    ImageCaptioning,\n    SpeechToText,\n} from \"./components\";\n\nimport ScrollToTop from \"./components/helpers/ScrollToTop\";\nimport Layout from \"./components/Layout\";\nimport Translator from \"./components/Translator\";\n\nfunction App() {\n    const [showAlert, setShowAlert] = useState(true);\n\n    return (\n        <ThemeProvider theme={{ fontFamily: \"JetBrains Mono\" }}>\n            <Layout>\n                <Router>\n                    <ScrollToTop />\n                    <Fragment>\n                        <GlobalStyles />\n                        <Container>\n                            <Header title=\"TheTensorClan\" />\n\n                            {showAlert && (\n                                <Alert\n                                    variant=\"info\"\n                                    onClose={() => setShowAlert(false)}\n                                    dismissible\n                                >\n                                    <Alert.Heading>Note</Alert.Heading>\n                                    <p>\n                                        The models are hosted on AWS Lambda,\n                                        which needs a cold start, you might\n                                        recieve err::TimedOut once or twice,\n                                        just click on the button again to send\n                                        one more Request !\n                                    </p>\n                                </Alert>\n                            )}\n                            <Switch>\n                                <Route exact path=\"/\">\n                                    <Home />\n                                </Route>\n                                <Route path=\"/classifiers\">\n                                    <Classifiers />\n                                </Route>\n                                <Route path=\"/face-swap\">\n                                    <FaceSwap />\n                                </Route>\n                                <Route path=\"/indian-face-recognizer\">\n                                    <IndianFaceRecognizer />\n                                </Route>\n                                <Route path=\"/lfw-plus-recognizer\">\n                                    <LFWPlusRecognizer />\n                                </Route>\n                                <Route path=\"/human-pose-estimation\">\n                                    <HumanPoseEstimation />\n                                </Route>\n                                <Route path=\"/red-car-gan\">\n                                    <RedCarGAN />\n                                </Route>\n                                <Route path=\"/mnist-vae\">\n                                    <MnistVae />\n                                </Route>\n                                <Route path=\"/red-car-vae\">\n                                    <RedCarVAE />\n                                </Route>\n                                <Route path=\"/ifo-sr\">\n                                    <IFOSR />\n                                </Route>\n                                <Route path=\"/text-classifiers\">\n                                    <TextClassifier />\n                                </Route>\n                                <Router path=\"/style-transfer\">\n                                    <StyleTransfer />\n                                </Router>\n                                <Router path=\"/translator\">\n                                    <Translator />\n                                </Router>\n                                <Router path=\"/image-captioning\">\n                                    <ImageCaptioning />\n                                </Router>\n                                <Router path=\"/speech-to-text\">\n                                    <SpeechToText />\n                                </Router>\n                            </Switch>\n                            <Footer />\n                        </Container>\n                    </Fragment>\n                </Router>\n            </Layout>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}